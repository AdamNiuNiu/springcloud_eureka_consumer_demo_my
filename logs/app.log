2020-07-07 16:47:39.972|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-07 16:47:41.527|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=46236b96-26ae-32e0-a8db-550b36ba29ee
2020-07-07 16:47:42.496|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 50103 (http)
2020-07-07 16:47:42.557|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-50103"]
2020-07-07 16:47:42.558|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-07 16:47:42.558|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-07 16:47:42.988|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-07 16:47:42.988|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2987 ms
2020-07-07 16:47:43.402|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-07 16:47:43.426|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 16:47:43.426|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 16:47:43.432|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 16:47:43.432|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 16:47:43.597|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-07 16:47:47.415|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-07 16:47:47.699|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-07 16:47:47.771|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-07 16:47:49.065|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-07 16:47:49.065|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-07 16:47:49.330|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-07 16:47:49.330|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-07 16:47:49.928|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 16:47:50.968|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-07 16:47:50.968|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-07 16:47:50.969|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-07 16:47:50.969|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-07 16:47:50.969|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-07 16:47:50.969|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-07 16:47:50.970|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-07 16:47:51.455|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-07 16:47:51.466|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-07 16:47:51.472|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-07 16:47:51.487|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594111671483 with initial instances count: 1
2020-07-07 16:47:51.499|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-07 16:47:51.500|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594111671500, current=UP, previous=STARTING]
2020-07-07 16:47:51.507|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 16:47:51.510|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-50103"]
2020-07-07 16:47:51.599|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 50103 (http) with context path ''
2020-07-07 16:47:51.601|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 50103
2020-07-07 16:47:51.605|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 16:47:54.458|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-07 16:47:54.505|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-07 16:47:54.588|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-07 16:47:54.651|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 19.325 seconds (JVM running for 24.672)
2020-07-07 16:52:50.976|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 16:57:50.978|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 16:59:03.278|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-07 16:59:03.279|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594112343278, current=DOWN, previous=UP]
2020-07-07 16:59:03.279|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 16:59:03.286|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 16:59:04.056|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-07 16:59:04.061|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-07 16:59:07.063|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-07 16:59:07.073|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-07 16:59:07.085|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-07 17:37:52.477|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-07 17:37:54.188|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=07ba6210-e5ed-3330-beb1-9cd1a8051698
2020-07-07 17:37:54.877|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-07 17:37:54.909|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-07 17:37:54.909|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-07 17:37:54.910|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-07 17:37:55.366|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-07 17:37:55.366|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 2865 ms
2020-07-07 17:37:56.787|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-07 17:37:56.813|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 17:37:56.813|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 17:37:56.821|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 17:37:56.821|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 17:37:56.963|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-07 17:37:59.910|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-07 17:38:00.075|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-07 17:38:00.121|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-07 17:38:00.217|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-07 17:38:00.217|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-07 17:38:00.421|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-07 17:38:00.422|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-07 17:38:00.782|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 17:38:01.532|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-07 17:38:01.532|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-07 17:38:01.532|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-07 17:38:01.532|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-07 17:38:01.532|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-07 17:38:01.532|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-07 17:38:01.533|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-07 17:38:01.825|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-07 17:38:01.833|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-07 17:38:01.838|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-07 17:38:01.846|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594114681843 with initial instances count: 2
2020-07-07 17:38:01.847|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-07 17:38:01.848|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594114681848, current=UP, previous=STARTING]
2020-07-07 17:38:01.851|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-07 17:38:01.851|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 17:38:01.904|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-07 17:38:01.905|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-07 17:38:01.916|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 17:38:03.126|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-07 17:38:03.146|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-07 17:38:03.203|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-07 17:38:03.332|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 14.514 seconds (JVM running for 18.099)
2020-07-07 17:38:44.831|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-07 17:38:44.832|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-07 17:38:44.846|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 14 ms
2020-07-07 17:39:11.356|INFO |http-nio-31003-exec-6|http-nio-31003-exec-6|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 17:39:11.505|INFO |http-nio-31003-exec-6|http-nio-31003-exec-6|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 17:39:11.511|INFO |http-nio-31003-exec-6|http-nio-31003-exec-6|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-07 17:39:11.576|INFO |http-nio-31003-exec-6|http-nio-31003-exec-6|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-07 17:39:11.727|INFO |http-nio-31003-exec-6|http-nio-31003-exec-6|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 17:39:11.744|INFO |http-nio-31003-exec-6|http-nio-31003-exec-6|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002, 127.0.0.1:31001],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:2;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
, [Server:127.0.0.1:31001;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@b87638e
2020-07-07 17:39:12.602|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 17:43:01.546|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 18:42:34.606|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 18:42:34.639|INFO |DiscoveryClient-HeartbeatExecutor-0|DiscoveryClient-HeartbeatExecutor-0|com.netflix.discovery.DiscoveryClient.renew() 878|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - Re-registering apps/EUREKA-CONSUMER-DEMO-MY
2020-07-07 18:42:34.639|INFO |DiscoveryClient-HeartbeatExecutor-0|DiscoveryClient-HeartbeatExecutor-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 18:42:34.655|INFO |DiscoveryClient-HeartbeatExecutor-0|DiscoveryClient-HeartbeatExecutor-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 18:47:34.608|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 18:56:21.357|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 18:56:21.847|INFO |DiscoveryClient-HeartbeatExecutor-0|DiscoveryClient-HeartbeatExecutor-0|com.netflix.discovery.DiscoveryClient.renew() 878|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - Re-registering apps/EUREKA-CONSUMER-DEMO-MY
2020-07-07 18:56:21.847|INFO |DiscoveryClient-HeartbeatExecutor-0|DiscoveryClient-HeartbeatExecutor-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 18:56:21.858|INFO |DiscoveryClient-HeartbeatExecutor-0|DiscoveryClient-HeartbeatExecutor-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 18:57:30.504|INFO |Thread-256|Thread-256|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-07 18:57:30.505|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-07 18:57:30.506|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594119450506, current=DOWN, previous=UP]
2020-07-07 18:57:30.506|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 18:57:30.515|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 18:57:31.359|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 18:57:31.359|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-07 18:57:31.366|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-07 18:57:31.369|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-07 18:57:34.377|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-07 18:57:34.385|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-07 18:57:34.405|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-07 19:26:39.528|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-07 19:26:41.095|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=952c617e-a053-3bdf-ae4b-784e366442c4
2020-07-07 19:26:43.173|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-07 19:26:44.126|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-07 19:26:44.176|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-07 19:26:44.177|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-07 19:26:44.177|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-07 19:26:44.590|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-07 19:26:44.590|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 5032 ms
2020-07-07 19:26:47.119|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-07 19:26:47.176|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 19:26:47.176|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 19:26:47.192|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 19:26:47.192|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 19:26:47.412|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-07 19:26:49.923|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-07 19:26:50.179|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-07 19:26:50.289|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-07 19:26:50.511|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-07 19:26:50.511|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-07 19:26:51.005|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-07 19:26:51.005|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-07 19:26:51.566|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 19:26:52.411|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-07 19:26:52.411|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-07 19:26:52.412|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-07 19:26:52.412|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-07 19:26:52.412|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-07 19:26:52.412|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-07 19:26:52.412|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-07 19:26:53.036|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-07 19:26:53.046|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-07 19:26:53.053|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-07 19:26:53.064|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594121213057 with initial instances count: 1
2020-07-07 19:26:53.065|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-07 19:26:53.066|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594121213066, current=UP, previous=STARTING]
2020-07-07 19:26:53.071|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 19:26:53.073|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-07 19:26:53.181|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 19:26:53.190|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-07 19:26:53.193|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-07 19:26:54.333|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-07 19:26:54.381|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-07 19:26:54.496|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-07 19:26:54.750|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 18.847 seconds (JVM running for 22.369)
2020-07-07 19:27:05.468|INFO |http-nio-31003-exec-2|http-nio-31003-exec-2|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-07 19:27:05.468|INFO |http-nio-31003-exec-2|http-nio-31003-exec-2|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-07 19:27:05.487|INFO |http-nio-31003-exec-2|http-nio-31003-exec-2|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 19 ms
2020-07-07 19:27:28.014|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:27:28.173|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 19:27:28.178|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-07 19:27:28.238|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-07 19:27:28.386|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:27:28.398|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@81e21f7
2020-07-07 19:27:29.261|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:29:32.767|INFO |Thread-281|Thread-281|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-07 19:29:32.768|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-07 19:29:32.768|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594121372768, current=DOWN, previous=UP]
2020-07-07 19:29:32.768|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 19:29:32.775|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 19:29:33.661|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-07 19:29:33.663|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 19:29:33.663|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-07 19:29:33.672|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-07 19:29:36.675|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-07 19:29:36.681|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-07 19:29:36.693|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-07 19:40:42.470|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-07 19:40:45.634|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=952c617e-a053-3bdf-ae4b-784e366442c4
2020-07-07 19:40:45.852|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-07 19:40:46.677|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-07 19:40:46.718|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-07 19:40:46.719|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-07 19:40:46.720|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-07 19:40:47.340|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-07 19:40:47.341|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4822 ms
2020-07-07 19:40:49.309|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-07 19:40:49.342|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 19:40:49.343|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 19:40:49.357|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 19:40:49.358|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 19:40:49.718|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-07 19:40:52.441|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-07 19:40:52.595|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-07 19:40:52.658|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-07 19:40:52.751|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-07 19:40:52.751|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-07 19:40:52.925|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-07 19:40:52.926|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-07 19:40:53.222|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 19:40:53.980|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-07 19:40:53.980|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-07 19:40:53.980|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-07 19:40:53.980|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-07 19:40:53.981|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-07 19:40:53.981|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-07 19:40:53.981|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-07 19:40:54.336|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-07 19:40:54.341|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-07 19:40:54.345|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-07 19:40:54.351|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594122054349 with initial instances count: 1
2020-07-07 19:40:54.353|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-07 19:40:54.354|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594122054354, current=UP, previous=STARTING]
2020-07-07 19:40:54.358|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 19:40:54.358|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-07 19:40:54.430|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-07 19:40:54.435|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-07 19:40:54.437|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 19:40:55.804|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-07 19:40:55.837|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-07 19:40:55.911|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-07 19:40:56.032|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 19.511 seconds (JVM running for 23.591)
2020-07-07 19:41:23.791|INFO |http-nio-31003-exec-4|http-nio-31003-exec-4|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-07 19:41:23.791|INFO |http-nio-31003-exec-4|http-nio-31003-exec-4|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-07 19:41:23.809|INFO |http-nio-31003-exec-4|http-nio-31003-exec-4|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 18 ms
2020-07-07 19:41:33.002|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:41:33.124|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 19:41:33.129|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-07 19:41:33.178|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-07 19:41:33.325|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:41:33.338|INFO |http-nio-31003-exec-10|http-nio-31003-exec-10|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@38869141
2020-07-07 19:41:34.206|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:45:53.984|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 19:48:39.583|ERROR|http-nio-31003-exec-3|http-nio-31003-exec-3|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet].log() 175|Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.FeignException$InternalServerError: [500] during [POST] to [http://eureka-provider-demo-my/provider/getUserInfo] [UserService#getUserInfo(String)]: [{"timestamp":"2020-07-07T11:48:33.267+00:00","status":500,"error":"Internal Server Error","message":"","path":"/provider/getUserInfo"}]] with root cause
feign.FeignException$InternalServerError: [500] during [POST] to [http://eureka-provider-demo-my/provider/getUserInfo] [UserService#getUserInfo(String)]: [{"timestamp":"2020-07-07T11:48:33.267+00:00","status":500,"error":"Internal Server Error","message":"","path":"/provider/getUserInfo"}]
	at feign.FeignException.serverErrorStatus(FeignException.java:231) ~[feign-core-10.10.1.jar:?]
	at feign.FeignException.errorStatus(FeignException.java:180) ~[feign-core-10.10.1.jar:?]
	at feign.FeignException.errorStatus(FeignException.java:169) ~[feign-core-10.10.1.jar:?]
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92) ~[feign-core-10.10.1.jar:?]
	at feign.AsyncResponseHandler.handleResponse(AsyncResponseHandler.java:96) ~[feign-core-10.10.1.jar:?]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138) ~[feign-core-10.10.1.jar:?]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:?]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:?]
	at com.sun.proxy.$Proxy102.getUserInfo(Unknown Source) ~[?:?]
	at com.adam.demo.web.ConsumerController.getUserInfoByFeign(ConsumerController.java:35) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-07 19:50:53.986|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 19:52:59.863|INFO |Thread-270|Thread-270|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-07 19:52:59.864|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-07 19:52:59.864|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594122779864, current=DOWN, previous=UP]
2020-07-07 19:52:59.865|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 19:52:59.873|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 19:53:00.627|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-07 19:53:00.631|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 19:53:00.631|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-07 19:53:00.641|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-07 19:53:03.644|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-07 19:53:03.648|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-07 19:53:03.662|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-07 19:53:24.649|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-07 19:53:26.163|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=952c617e-a053-3bdf-ae4b-784e366442c4
2020-07-07 19:53:28.126|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-07 19:53:28.863|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-07 19:53:28.912|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-07 19:53:28.912|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-07 19:53:28.912|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-07 19:53:29.413|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-07 19:53:29.413|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4730 ms
2020-07-07 19:53:32.108|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-07 19:53:32.167|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 19:53:32.168|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 19:53:32.185|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 19:53:32.185|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 19:53:32.418|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-07 19:53:35.236|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-07 19:53:35.539|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-07 19:53:35.674|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-07 19:53:35.886|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-07 19:53:35.887|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-07 19:53:36.389|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-07 19:53:36.389|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-07 19:53:36.895|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 19:53:37.896|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-07 19:53:37.896|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-07 19:53:37.896|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-07 19:53:37.896|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-07 19:53:37.896|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-07 19:53:37.897|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-07 19:53:37.897|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-07 19:53:38.685|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-07 19:53:38.694|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-07 19:53:38.701|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-07 19:53:38.711|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594122818705 with initial instances count: 1
2020-07-07 19:53:38.712|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-07 19:53:38.714|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594122818713, current=UP, previous=STARTING]
2020-07-07 19:53:38.719|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 19:53:38.720|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-07 19:53:39.033|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 19:53:39.046|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-07 19:53:39.051|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-07 19:53:40.624|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-07 19:53:40.677|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-07 19:53:40.801|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-07 19:53:41.081|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 20.257 seconds (JVM running for 23.608)
2020-07-07 19:53:53.021|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-07 19:53:53.021|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-07 19:53:53.041|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 20 ms
2020-07-07 19:54:05.339|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:54:05.484|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 19:54:05.489|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-07 19:54:05.561|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-07 19:54:05.709|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:54:05.724|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@52b954f0
2020-07-07 19:55:33.021|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 19:55:33.056|ERROR|http-nio-31003-exec-1|http-nio-31003-exec-1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet].log() 175|Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.FeignException$NotFound: [404] during [POST] to [http://eureka-provider-demo-my/provider/getUserInfo/00000000000000] [UserService#getUserInfo(String)]: [{"timestamp":"2020-07-07T11:54:06.433+00:00","status":404,"error":"Not Found","message":"","path":"/provider/getUserInfo/00000000000000"}]] with root cause
feign.FeignException$NotFound: [404] during [POST] to [http://eureka-provider-demo-my/provider/getUserInfo/00000000000000] [UserService#getUserInfo(String)]: [{"timestamp":"2020-07-07T11:54:06.433+00:00","status":404,"error":"Not Found","message":"","path":"/provider/getUserInfo/00000000000000"}]
	at feign.FeignException.clientErrorStatus(FeignException.java:201) ~[feign-core-10.10.1.jar:?]
	at feign.FeignException.errorStatus(FeignException.java:177) ~[feign-core-10.10.1.jar:?]
	at feign.FeignException.errorStatus(FeignException.java:169) ~[feign-core-10.10.1.jar:?]
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92) ~[feign-core-10.10.1.jar:?]
	at feign.AsyncResponseHandler.handleResponse(AsyncResponseHandler.java:96) ~[feign-core-10.10.1.jar:?]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138) ~[feign-core-10.10.1.jar:?]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:?]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:?]
	at com.sun.proxy.$Proxy102.getUserInfo(Unknown Source) ~[?:?]
	at com.adam.demo.web.ConsumerController.getUserInfoByFeign(ConsumerController.java:35) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-07 19:58:37.903|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 20:03:37.905|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 20:05:14.961|INFO |Thread-279|Thread-279|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-07 20:05:14.964|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-07 20:05:14.964|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594123514964, current=DOWN, previous=UP]
2020-07-07 20:05:14.964|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 20:05:14.971|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 20:05:15.866|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-07 20:05:15.871|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 20:05:15.871|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-07 20:05:15.882|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-07 20:05:18.885|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-07 20:05:18.894|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-07 20:05:18.906|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-07 20:16:56.604|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-07 20:16:58.576|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=56ccd5a4-04b6-3d97-86a1-5085f99b9d24
2020-07-07 20:17:00.487|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-07 20:17:01.875|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-07 20:17:01.928|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-07 20:17:01.929|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-07 20:17:01.929|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-07 20:17:02.227|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-07 20:17:02.228|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 5581 ms
2020-07-07 20:17:32.956|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-07 20:17:32.992|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 20:17:32.992|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 20:17:32.999|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 20:17:32.999|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 20:17:33.196|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-07 20:17:35.914|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-07 20:17:36.092|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-07 20:17:36.141|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-07 20:17:36.241|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-07 20:17:36.241|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-07 20:17:36.460|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-07 20:17:36.460|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-07 20:17:36.750|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 20:17:37.436|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-07 20:17:37.436|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-07 20:17:37.436|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-07 20:17:37.436|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-07 20:17:37.437|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-07 20:17:37.437|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-07 20:17:37.437|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-07 20:17:37.672|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-07 20:17:37.675|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-07 20:17:37.680|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-07 20:17:37.686|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594124257684 with initial instances count: 1
2020-07-07 20:17:37.689|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-07 20:17:37.690|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594124257690, current=UP, previous=STARTING]
2020-07-07 20:17:37.696|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 20:17:37.696|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-07 20:17:37.752|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-07 20:17:37.756|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-07 20:17:37.764|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 20:17:38.867|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-07 20:17:38.891|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-07 20:17:38.956|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-07 20:17:39.107|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 46.535 seconds (JVM running for 49.998)
2020-07-07 20:17:56.567|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-07 20:17:56.577|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-07 20:17:58.176|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 1594 ms
2020-07-07 20:18:19.021|ERROR|http-nio-31003-exec-1|http-nio-31003-exec-1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet].log() 175|Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.contrib.javanica.exception.FallbackDefinitionException: fallback method wasn't found: testFallBack([class java.lang.String])] with root cause
com.netflix.hystrix.contrib.javanica.exception.FallbackDefinitionException: fallback method wasn't found: testFallBack([class java.lang.String])
	at com.netflix.hystrix.contrib.javanica.utils.MethodProvider$FallbackMethodFinder.doFind(MethodProvider.java:190) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.utils.MethodProvider$FallbackMethodFinder.find(MethodProvider.java:159) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.utils.MethodProvider.getFallbackMethod(MethodProvider.java:73) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.utils.MethodProvider.getFallbackMethod(MethodProvider.java:59) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect.setFallbackMethod(HystrixCommandAspect.java:331) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect.access$300(HystrixCommandAspect.java:64) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect$MetaHolderFactory.metaHolderBuilder(HystrixCommandAspect.java:176) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect$CommandMetaHolderFactory.create(HystrixCommandAspect.java:258) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect$MetaHolderFactory.create(HystrixCommandAspect.java:166) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect.methodsAnnotatedWithHystrixCommand(HystrixCommandAspect.java:93) ~[hystrix-javanica-1.5.18.jar:1.5.18]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.adam.demo.web.ConsumerController$$EnhancerBySpringCGLIB$$1fa0606f.getUserInfoByFeign(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-07 20:22:17.139|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-07 20:22:17.139|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594124537139, current=DOWN, previous=UP]
2020-07-07 20:22:17.139|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 20:22:17.145|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 20:22:18.146|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-07 20:22:18.180|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 20:22:18.180|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 20:22:18.189|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-07 20:22:21.190|WARN |DiscoveryClient-0|DiscoveryClient-0|com.netflix.discovery.TimedSupervisorTask.run() 90|task supervisor shutting down, can't accept the task
2020-07-07 20:22:21.192|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-07 20:22:21.197|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-07 20:22:21.209|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-07 20:22:36.013|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-07 20:22:37.631|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=56ccd5a4-04b6-3d97-86a1-5085f99b9d24
2020-07-07 20:22:41.168|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-07 20:22:42.012|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-07 20:22:42.036|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-07 20:22:42.036|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-07 20:22:42.036|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-07 20:22:42.238|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-07 20:22:42.238|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 6182 ms
2020-07-07 20:22:44.280|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-07 20:22:44.313|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 20:22:44.313|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 20:22:44.322|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-07 20:22:44.322|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-07 20:22:44.488|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-07 20:22:47.220|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-07 20:22:47.397|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-07 20:22:47.446|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-07 20:22:47.533|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-07 20:22:47.534|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-07 20:22:47.710|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-07 20:22:47.711|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-07 20:22:47.995|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-07 20:22:48.689|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-07 20:22:48.689|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-07 20:22:48.689|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-07 20:22:48.689|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-07 20:22:48.690|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-07 20:22:48.690|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-07 20:22:48.690|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-07 20:22:48.901|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-07 20:22:48.905|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-07 20:22:48.907|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-07 20:22:48.912|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594124568910 with initial instances count: 1
2020-07-07 20:22:48.916|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-07 20:22:48.917|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594124568916, current=UP, previous=STARTING]
2020-07-07 20:22:48.921|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-07 20:22:48.921|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-07 20:22:48.971|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-07 20:22:48.972|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-07 20:22:48.982|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-07 20:22:50.048|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-07 20:22:50.065|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-07 20:22:50.122|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-07 20:22:50.257|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 17.901 seconds (JVM running for 21.44)
2020-07-07 20:23:09.773|INFO |http-nio-31003-exec-2|http-nio-31003-exec-2|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-07 20:23:09.781|INFO |http-nio-31003-exec-2|http-nio-31003-exec-2|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-07 20:23:11.497|INFO |http-nio-31003-exec-2|http-nio-31003-exec-2|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 1711 ms
2020-07-07 20:23:55.601|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 20:23:55.621|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-07 20:23:55.622|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-07 20:23:55.629|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-07 20:23:55.653|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-07 20:23:55.656|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@41ce9548
2020-07-07 20:24:00.843|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:04:46.208|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:04:47.829|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=5af78a81-f8ef-31da-8718-809b16e95b28
2020-07-08 09:04:48.006|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:04:48.977|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:04:49.024|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:04:49.025|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:04:49.027|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:04:49.401|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:04:49.402|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3155 ms
2020-07-08 09:04:51.662|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:04:51.693|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:04:51.693|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:04:51.700|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:04:51.700|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:04:51.906|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:04:54.806|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:04:55.000|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:04:55.067|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:04:55.188|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:04:55.188|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:04:55.441|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:04:55.441|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:04:55.841|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:04:56.705|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:04:56.705|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:04:56.705|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:04:56.705|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:04:56.706|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:04:56.706|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:04:56.706|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:04:56.943|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:04:56.947|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:04:56.950|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:04:56.960|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594170296958 with initial instances count: 1
2020-07-08 09:04:56.963|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:04:56.964|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594170296964, current=UP, previous=STARTING]
2020-07-08 09:04:56.968|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:04:56.969|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:04:57.018|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:04:57.020|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:04:57.029|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:04:58.215|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:04:58.234|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:04:58.293|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:04:58.437|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 16.341 seconds (JVM running for 19.787)
2020-07-08 09:06:20.256|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:06:20.256|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:06:20.281|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 25 ms
2020-07-08 09:06:46.865|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:06:46.922|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:06:46.926|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 09:06:46.952|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 09:06:47.077|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:06:47.083|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1e86ac05
2020-07-08 09:06:53.551|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:08:25.242|INFO |Thread-265|Thread-265|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 09:08:25.243|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:08:25.244|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594170505243, current=DOWN, previous=UP]
2020-07-08 09:08:25.244|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:08:25.252|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:08:26.014|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:08:26.029|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:08:26.029|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 09:08:26.306|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:08:29.307|WARN |DiscoveryClient-0|DiscoveryClient-0|com.netflix.discovery.TimedSupervisorTask.run() 90|task supervisor shutting down, can't accept the task
2020-07-08 09:08:29.308|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:08:29.318|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:08:29.330|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 09:08:43.569|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:08:45.309|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=5af78a81-f8ef-31da-8718-809b16e95b28
2020-07-08 09:08:47.290|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:08:48.719|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:08:48.775|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:08:48.776|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:08:48.776|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:08:49.088|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:08:49.088|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 5480 ms
2020-07-08 09:08:52.065|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:08:52.141|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:08:52.141|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:08:52.156|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:08:52.156|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:08:52.481|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:08:55.474|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:08:55.733|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:08:55.846|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:08:56.067|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:08:56.067|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:08:56.570|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:08:56.570|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:08:57.109|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:08:57.922|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:08:57.922|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:08:57.922|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:08:57.922|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:08:57.922|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:08:57.922|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:08:57.923|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:08:58.527|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:08:58.537|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:08:58.545|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:08:58.559|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594170538550 with initial instances count: 1
2020-07-08 09:08:58.561|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:08:58.563|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594170538563, current=UP, previous=STARTING]
2020-07-08 09:08:58.569|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:08:58.571|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:08:58.692|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:08:58.717|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:08:58.720|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:08:59.850|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:08:59.894|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:09:00.025|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:09:00.316|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 20.901 seconds (JVM running for 24.413)
2020-07-08 09:09:08.033|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:09:08.033|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:09:08.051|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 17 ms
2020-07-08 09:09:36.061|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:09:36.103|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:09:36.105|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 09:09:36.116|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 09:09:36.163|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:09:36.166|INFO |hystrix-eureka-provider-demo-my-1|hystrix-eureka-provider-demo-my-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@40572643
2020-07-08 09:09:38.257|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:10:08.999|INFO |Thread-266|Thread-266|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 09:10:09.000|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:10:09.001|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594170609001, current=DOWN, previous=UP]
2020-07-08 09:10:09.001|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:10:09.009|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:10:09.744|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:10:09.755|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:10:09.756|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 09:10:09.765|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:10:12.767|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:10:12.772|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:10:12.783|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 09:20:15.967|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:20:17.287|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=5af78a81-f8ef-31da-8718-809b16e95b28
2020-07-08 09:20:19.085|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:20:20.259|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:20:20.328|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:20:20.328|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:20:20.329|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:20:20.621|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:20:20.621|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4615 ms
2020-07-08 09:20:33.102|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:20:33.161|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:20:33.162|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:20:33.172|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:20:33.172|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:20:33.374|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:20:35.871|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:20:36.037|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:20:36.093|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:20:36.190|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:20:36.190|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:20:36.403|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:20:36.403|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:20:36.725|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:20:37.412|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:20:37.413|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:20:37.413|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:20:37.413|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:20:37.414|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:20:37.414|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:20:37.414|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:20:37.668|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:20:37.671|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:20:37.674|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:20:37.679|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594171237677 with initial instances count: 1
2020-07-08 09:20:37.681|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:20:37.682|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594171237682, current=UP, previous=STARTING]
2020-07-08 09:20:37.685|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:20:37.685|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:20:37.728|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:20:37.729|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:20:37.738|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:20:38.841|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:20:38.861|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:20:38.912|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:20:39.053|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 26.442 seconds (JVM running for 29.655)
2020-07-08 09:20:56.488|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:20:56.495|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:20:57.990|INFO |http-nio-31003-exec-1|http-nio-31003-exec-1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 1490 ms
2020-07-08 09:22:39.070|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:22:39.070|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594171359070, current=DOWN, previous=UP]
2020-07-08 09:22:39.070|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:22:39.078|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:22:39.935|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:22:39.952|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:22:42.954|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:22:42.962|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:22:42.978|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 09:26:28.714|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:26:30.601|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 09:26:30.669|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 09:26:30.954|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=ba40ace6-af26-36dc-9310-d55df977690d
2020-07-08 09:26:31.143|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:26:31.924|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:26:31.958|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:26:31.959|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:26:31.959|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:26:32.204|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:26:32.204|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3458 ms
2020-07-08 09:26:32.340|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:26:32.341|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:26:32.356|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@671d97bc
2020-07-08 09:26:35.595|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 09:26:35.683|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:26:35.851|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:26:35.851|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:26:36.031|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:26:37.582|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:26:37.756|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:26:37.807|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:26:37.908|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:26:37.908|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:26:38.138|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:26:38.138|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:26:38.649|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:26:39.658|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:26:39.658|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:26:39.658|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:26:39.659|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:26:39.659|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:26:39.659|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:26:39.659|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:26:39.871|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:26:39.875|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:26:39.879|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:26:39.884|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594171599882 with initial instances count: 1
2020-07-08 09:26:39.888|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:26:39.890|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594171599889, current=UP, previous=STARTING]
2020-07-08 09:26:39.894|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:26:39.894|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:26:39.950|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:26:39.954|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:26:39.966|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:26:40.992|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:26:41.007|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:26:41.048|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:26:41.161|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 16.168 seconds (JVM running for 19.4)
2020-07-08 09:26:41.624|INFO |RMI TCP Connection(3)-192.168.106.1|RMI TCP Connection(3)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:26:41.624|INFO |RMI TCP Connection(3)-192.168.106.1|RMI TCP Connection(3)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:26:41.635|INFO |RMI TCP Connection(3)-192.168.106.1|RMI TCP Connection(3)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 11 ms
2020-07-08 09:31:39.664|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:33:19.754|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:33:19.774|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:33:19.776|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 09:33:19.783|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 09:33:19.803|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:33:19.805|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4b640b27
2020-07-08 09:33:20.788|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:36:39.666|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:40:15.666|INFO |Thread-445|Thread-445|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 09:40:15.667|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:40:15.667|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594172415667, current=DOWN, previous=UP]
2020-07-08 09:40:15.668|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:40:15.674|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:40:16.410|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:40:16.422|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:40:16.422|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 09:40:16.435|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:40:19.439|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:40:19.445|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:40:19.458|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 09:40:31.542|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:40:33.430|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 09:40:33.457|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 09:40:33.674|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=ba40ace6-af26-36dc-9310-d55df977690d
2020-07-08 09:40:33.867|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:40:34.784|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:40:34.818|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:40:34.819|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:40:34.820|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:40:35.151|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:40:35.151|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3569 ms
2020-07-08 09:40:35.354|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:40:35.356|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:40:35.387|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@368424db
2020-07-08 09:40:38.869|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 09:40:38.952|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:40:39.123|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:40:39.123|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:40:39.282|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:40:40.840|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:40:41.032|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:40:41.094|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:40:41.284|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:40:41.285|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:40:41.527|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:40:41.527|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:40:41.903|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:40:42.716|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:40:42.716|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:40:42.716|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:40:42.717|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:40:42.717|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:40:42.717|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:40:42.717|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:40:42.979|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:40:42.983|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:40:42.986|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:40:42.993|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594172442991 with initial instances count: 1
2020-07-08 09:40:42.995|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:40:42.996|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594172442996, current=UP, previous=STARTING]
2020-07-08 09:40:42.999|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:40:42.999|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:40:43.042|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:40:43.044|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:40:43.053|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:40:44.085|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:40:44.101|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:40:44.149|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:40:44.277|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 17.112 seconds (JVM running for 21.063)
2020-07-08 09:40:44.837|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:40:44.837|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:40:44.852|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 14 ms
2020-07-08 09:42:24.442|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:42:24.460|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:42:24.461|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 09:42:24.467|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 09:42:24.485|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:42:24.487|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3cd0dcc5
2020-07-08 09:42:25.472|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:43:20.646|INFO |Thread-442|Thread-442|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 09:43:20.647|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:43:20.647|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594172600647, current=DOWN, previous=UP]
2020-07-08 09:43:20.648|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:43:20.654|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:43:21.691|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:43:21.705|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:43:21.705|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 09:43:21.716|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:43:24.717|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:43:24.728|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:43:24.738|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 09:44:00.272|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:44:02.624|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 09:44:02.651|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 09:44:02.869|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=ba40ace6-af26-36dc-9310-d55df977690d
2020-07-08 09:44:03.039|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:44:04.049|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:44:04.076|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:44:04.077|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:44:04.077|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:44:04.332|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:44:04.332|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3969 ms
2020-07-08 09:44:04.518|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:44:04.518|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:44:04.533|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5896cb9c
2020-07-08 09:44:08.238|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 09:44:08.412|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:44:08.694|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:44:08.694|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:44:08.976|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:44:11.005|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:44:11.297|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:44:11.354|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:44:11.518|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:44:11.518|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:44:11.972|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:44:11.972|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:44:12.676|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:44:13.738|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:44:13.738|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:44:13.739|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:44:13.739|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:44:13.739|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:44:13.739|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:44:13.740|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:44:14.214|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:44:14.221|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:44:14.230|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:44:14.238|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594172654235 with initial instances count: 1
2020-07-08 09:44:14.244|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:44:14.245|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594172654245, current=UP, previous=STARTING]
2020-07-08 09:44:14.249|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:44:14.249|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:44:14.298|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:44:14.300|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:44:14.303|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:44:15.544|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:44:15.570|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:44:15.652|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:44:15.785|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 20.032 seconds (JVM running for 24.374)
2020-07-08 09:44:19.440|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:44:19.440|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:44:19.457|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 16 ms
2020-07-08 09:45:49.449|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:45:49.450|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594172749449, current=DOWN, previous=UP]
2020-07-08 09:45:49.450|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:45:49.456|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:45:50.418|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:45:50.437|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:45:53.441|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:45:53.447|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:45:53.456|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 09:46:56.007|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:46:57.689|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 09:46:57.715|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 09:46:57.914|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=ba40ace6-af26-36dc-9310-d55df977690d
2020-07-08 09:46:58.107|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:46:59.088|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:46:59.119|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:46:59.121|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:46:59.121|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:46:59.405|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:46:59.406|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3358 ms
2020-07-08 09:46:59.600|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:46:59.601|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:46:59.625|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@69ba3f4e
2020-07-08 09:47:02.793|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 09:47:02.909|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:47:03.113|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:47:03.113|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:47:03.358|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:47:05.077|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:47:05.237|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:47:05.284|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:47:05.380|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:47:05.381|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:47:05.571|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:47:05.571|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:47:05.883|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:47:06.617|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:47:06.617|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:47:06.618|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:47:06.618|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:47:06.618|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:47:06.618|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:47:06.618|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:47:06.910|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:47:06.917|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:47:06.921|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:47:06.928|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594172826926 with initial instances count: 1
2020-07-08 09:47:06.932|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:47:06.933|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594172826933, current=UP, previous=STARTING]
2020-07-08 09:47:06.937|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:47:06.937|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:47:06.986|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:47:06.989|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:47:06.991|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:47:08.193|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:47:08.218|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:47:08.286|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:47:08.451|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 16.506 seconds (JVM running for 20.049)
2020-07-08 09:47:11.032|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:47:11.032|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:47:11.043|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 10 ms
2020-07-08 09:47:23.659|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:47:23.678|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:47:23.679|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 09:47:23.687|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 09:47:23.709|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:47:23.716|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@409dcb2a
2020-07-08 09:47:24.691|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:49:22.027|INFO |Thread-437|Thread-437|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 09:49:22.028|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:49:22.028|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594172962028, current=DOWN, previous=UP]
2020-07-08 09:49:22.028|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:49:22.040|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:49:22.953|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:49:22.966|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:49:22.966|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 09:49:22.975|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:49:25.979|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:49:25.988|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:49:26.004|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 09:49:40.394|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:49:42.412|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 09:49:42.441|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 09:49:42.663|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=ba40ace6-af26-36dc-9310-d55df977690d
2020-07-08 09:49:42.831|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:49:43.604|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:49:43.629|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:49:43.630|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:49:43.630|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:49:43.841|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:49:43.841|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3406 ms
2020-07-08 09:49:43.998|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:49:43.999|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:49:44.015|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1d944fc0
2020-07-08 09:49:47.470|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 09:49:47.583|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:49:47.724|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:49:47.724|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:49:47.903|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:49:49.320|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:49:49.480|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:49:49.531|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:49:49.636|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:49:49.637|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:49:49.822|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:49:49.822|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:49:50.181|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:49:51.031|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:49:51.032|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:49:51.032|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:49:51.032|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:49:51.032|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:49:51.033|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:49:51.033|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:49:51.327|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:49:51.332|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:49:51.338|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:49:51.345|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594172991343 with initial instances count: 1
2020-07-08 09:49:51.347|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:49:51.348|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594172991348, current=UP, previous=STARTING]
2020-07-08 09:49:51.351|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:49:51.352|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:49:51.399|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:49:51.401|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:49:51.411|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:49:52.528|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:49:52.546|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:49:52.595|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:49:52.719|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 15.837 seconds (JVM running for 19.635)
2020-07-08 09:49:53.987|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:49:53.987|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:49:54.002|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 14 ms
2020-07-08 09:50:08.575|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:50:08.595|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:50:08.596|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 09:50:08.605|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 09:50:08.628|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:50:08.631|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4cd94ef4
2020-07-08 09:50:09.611|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:50:37.016|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:50:37.016|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594173037016, current=DOWN, previous=UP]
2020-07-08 09:50:37.017|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:50:37.018|INFO |Thread-440|Thread-440|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 09:50:37.024|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:50:37.921|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:50:37.932|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:50:37.932|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 09:50:37.948|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:50:40.950|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:50:40.960|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:50:40.971|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-08 09:51:09.509|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-08 09:51:11.599|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-08 09:51:11.624|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-08 09:51:11.815|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=ba40ace6-af26-36dc-9310-d55df977690d
2020-07-08 09:51:11.978|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-08 09:51:12.826|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-08 09:51:12.854|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-08 09:51:12.855|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-08 09:51:12.855|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-08 09:51:13.069|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-08 09:51:13.069|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 3515 ms
2020-07-08 09:51:13.224|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:51:13.225|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:51:13.241|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3866c96e
2020-07-08 09:51:16.691|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-08 09:51:16.799|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-08 09:51:16.947|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-08 09:51:16.947|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-08 09:51:17.117|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-08 09:51:18.533|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-08 09:51:18.697|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-08 09:51:18.747|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-08 09:51:18.839|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-08 09:51:18.839|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-08 09:51:19.058|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-08 09:51:19.058|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-08 09:51:19.409|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-08 09:51:20.266|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-08 09:51:20.266|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-08 09:51:20.266|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-08 09:51:20.267|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-08 09:51:20.267|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-08 09:51:20.267|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-08 09:51:20.267|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-08 09:51:20.553|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-08 09:51:20.557|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-08 09:51:20.562|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-08 09:51:20.567|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594173080565 with initial instances count: 1
2020-07-08 09:51:20.570|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-08 09:51:20.571|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594173080571, current=UP, previous=STARTING]
2020-07-08 09:51:20.575|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:51:20.575|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-08 09:51:20.625|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-08 09:51:20.626|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-08 09:51:20.642|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:51:21.703|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-08 09:51:21.722|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-08 09:51:21.789|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-08 09:51:21.956|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 16.073 seconds (JVM running for 19.837)
2020-07-08 09:51:23.052|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-08 09:51:23.052|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-08 09:51:23.066|INFO |RMI TCP Connection(7)-192.168.106.1|RMI TCP Connection(7)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 14 ms
2020-07-08 09:51:34.823|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:51:34.841|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.util.concurrent.ShutdownEnabledTimer.<init>() 58|Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:51:34.843|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig() 197|Client: eureka-provider-demo-my instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2020-07-08 09:51:34.850|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature() 222|Using serverListUpdater PollingServerListUpdater
2020-07-08 09:51:34.869|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:51:34.879|INFO |hystrix-ConsumerController-1|hystrix-ConsumerController-1|com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit() 150|DynamicServerListLoadBalancer for client eureka-provider-demo-my initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-provider-demo-my,current list of Servers=[127.0.0.1:31002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:127.0.0.1:31002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6704ba1f
2020-07-08 09:51:35.854|INFO |PollingServerListUpdater-0|PollingServerListUpdater-0|com.netflix.config.ChainedDynamicProperty.checkAndFlip() 115|Flipping property: eureka-provider-demo-my.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2020-07-08 09:55:36.745|WARN |DiscoveryClient-0|DiscoveryClient-0|com.netflix.discovery.TimedSupervisorTask.run() 73|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) ~[?:1.8.0_211]
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-08 09:55:36.743|WARN |DiscoveryClient-1|DiscoveryClient-1|com.netflix.discovery.TimedSupervisorTask.run() 73|task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) ~[?:1.8.0_211]
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-08 09:55:39.247|ERROR|DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute() 91|Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:50101/eureka/}
javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:200) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1115) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:997) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1517) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1484) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize(ObjectReader.java:2196) ~[jackson-databind-2.11.0.jar:2.11.0]
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2054) ~[jackson-databind-2.11.0.jar:2.11.0]
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1431) ~[jackson-databind-2.11.0.jar:2.11.0]
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103) ~[eureka-client-1.9.21.jar:1.9.21]
	... 26 more
2020-07-08 09:55:39.276|WARN |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute() 130|Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
2020-07-08 09:55:40.102|ERROR|DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute() 83|Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:50101/eureka/}
javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:200) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1115) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:997) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1517) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1484) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.fasterxml.jackson.databind.ObjectReader._unwrapAndDeserialize(ObjectReader.java:2196) ~[jackson-databind-2.11.0.jar:2.11.0]
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2054) ~[jackson-databind-2.11.0.jar:2.11.0]
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1431) ~[jackson-databind-2.11.0.jar:2.11.0]
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103) ~[eureka-client-1.9.21.jar:1.9.21]
	... 27 more
2020-07-08 09:55:40.120|WARN |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute() 130|Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
2020-07-08 09:55:40.335|ERROR|DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.fetchRegistry() 1002|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1115) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:997) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1517) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1484) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-08 09:55:58.466|INFO |Thread-440|Thread-440|com.netflix.loadbalancer.PollingServerListUpdater.run() 53|Shutting down the Executor Pool for PollingServerListUpdater
2020-07-08 09:55:58.467|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-08 09:55:58.467|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594173358467, current=DOWN, previous=UP]
2020-07-08 09:55:58.468|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103: registering service...
2020-07-08 09:55:58.475|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - registration status: 204
2020-07-08 09:55:59.473|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-08 09:55:59.490|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 67|Shutdown hook removed for: NFLoadBalancer-PingTimer-eureka-provider-demo-my
2020-07-08 09:55:59.490|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.util.concurrent.ShutdownEnabledTimer.cancel() 72|Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[?:1.8.0_211]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[?:1.8.0_211]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-08 09:55:59.500|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-08 09:56:02.504|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-08 09:56:02.511|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:50103 - deregister  status: 200
2020-07-08 09:56:02.521|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 12:35:24.143|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 12:35:26.242|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam.demo]' package. Please check your configuration.
2020-07-14 12:35:26.951|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 12:35:27.219|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 251ms. Found 2 JPA repository interfaces.
2020-07-14 12:35:27.585|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 12:35:27.632|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 12:35:28.369|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=efb252de-23d0-30e4-b441-68ffc96c502c
2020-07-14 12:35:28.762|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 12:35:30.355|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 12:35:30.437|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 12:35:30.438|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 12:35:30.438|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 12:35:31.278|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 12:35:31.278|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 7096 ms
2020-07-14 12:35:31.812|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 12:35:31.813|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 12:35:31.868|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@77cd235b
2020-07-14 12:35:33.029|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 12:35:33.070|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 12:35:33.080|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 12:35:33.522|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 12:35:33.700|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 12:35:34.049|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 12:35:34.804|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 12:35:35.718|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 12:35:36.334|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 12:35:36.847|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 12:35:37.945|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 12:35:38.892|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 12:35:38.918|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 12:35:39.419|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 12:35:41.072|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 12:35:41.175|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 12:35:41.323|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 12:35:41.323|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 12:35:43.113|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 12:35:43.468|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 12:35:43.514|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 12:35:43.610|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 12:35:43.610|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 12:35:43.814|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 12:35:43.815|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 12:35:44.444|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 12:35:45.182|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 12:35:45.183|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 12:35:45.183|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 12:35:45.183|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 12:35:45.183|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 12:35:45.183|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 12:35:45.183|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 12:35:45.533|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 12:35:45.537|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 12:35:45.541|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 12:35:45.549|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594701345546 with initial instances count: 1
2020-07-14 12:35:45.554|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 12:35:45.555|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594701345555, current=UP, previous=STARTING]
2020-07-14 12:35:45.559|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 12:35:45.560|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 12:35:45.664|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 12:35:45.669|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 12:35:45.670|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 12:35:46.912|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 12:35:46.933|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 12:35:46.987|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 12:35:47.153|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:35:52.128|INFO |main|main|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.checkMismatchedQueues() 1766|Broker not available; cannot force queue declarations during start: java.io.IOException
2020-07-14 12:35:52.139|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:35:57.101|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:35:57.103|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:02.073|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 12:36:02.074|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 12:36:02.112|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 41.378 seconds (JVM running for 46.241)
2020-07-14 12:36:04.451|INFO |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:04.456|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 12:36:04.457|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 12:36:04.489|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 32 ms
2020-07-14 12:36:07.188|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@27ad94b3: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:36:09.416|WARN |RMI TCP Connection(13)-192.168.106.1|RMI TCP Connection(13)-192.168.106.1|org.springframework.boot.actuate.amqp.RabbitHealthIndicator.health() 87|Rabbit health check failed
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.boot.actuate.amqp.RabbitHealthIndicator.getVersion(RabbitHealthIndicator.java:49) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.amqp.RabbitHealthIndicator.doHealthCheck(RabbitHealthIndicator.java:44) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthIndicator.getHealth(HealthIndicator.java:37) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:71) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpoint.getHealth(HealthEndpoint.java:39) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:99) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getAggregateHealth(HealthEndpointSupport.java:110) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getContribution(HealthEndpointSupport.java:96) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:74) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpointSupport.getHealth(HealthEndpointSupport.java:61) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:65) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.health.HealthEndpoint.health(HealthEndpoint.java:55) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282) ~[spring-core-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.actuate.endpoint.invoke.reflect.ReflectiveOperationInvoker.invoke(ReflectiveOperationInvoker.java:77) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredOperation.invoke(AbstractDiscoveredOperation.java:60) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:121) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.actuate.endpoint.jmx.EndpointMBean.invoke(EndpointMBean.java:96) ~[spring-boot-actuator-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819) ~[?:1.8.0_211]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801) ~[?:1.8.0_211]
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468) ~[?:1.8.0_211]
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76) ~[?:1.8.0_211]
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309) ~[?:1.8.0_211]
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1401) ~[?:1.8.0_211]
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829) ~[?:1.8.0_211]
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357) ~[?:1.8.0_211]
	at sun.rmi.transport.Transport$1.run(Transport.java:200) ~[?:1.8.0_211]
	at sun.rmi.transport.Transport$1.run(Transport.java:197) ~[?:1.8.0_211]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_211]
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196) ~[?:1.8.0_211]
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573) ~[?:1.8.0_211]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834) ~[?:1.8.0_211]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688) ~[?:1.8.0_211]
	at java.security.AccessController.doPrivileged(Native Method) ~[?:1.8.0_211]
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 50 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 50 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:36:09.417|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:14.373|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:36:14.373|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:24.366|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@79370819: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:36:24.373|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:29.332|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:36:29.332|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:39.356|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@70b05639: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:36:39.386|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:44.378|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:36:44.379|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:54.434|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@7f740185: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:36:54.441|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:36:59.398|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:36:59.398|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:37:09.449|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@10cb2c7d: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:37:09.458|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:37:14.427|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:37:14.428|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:37:24.424|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@697fe706: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:37:24.424|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:37:29.380|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:37:29.381|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:37:39.353|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@461f2f29: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:37:39.354|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:37:44.309|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:37:44.310|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:37:54.305|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@7b5732af: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:37:54.306|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:37:59.274|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:37:59.274|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:38:09.245|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@6b6d1fdb: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:38:09.245|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:38:14.211|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:38:14.211|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:38:24.358|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@3cf5ac8e: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:38:24.367|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-11|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-11|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:38:29.347|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-11|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-11|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:38:29.347|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-11|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-11|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:38:39.323|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-11|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-11|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@20327453: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:38:39.323|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-12|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-12|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:38:44.281|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-12|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-12|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:38:44.281|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-12|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-12|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:38:54.254|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-12|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-12|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@65cb7072: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:38:54.255|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-13|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-13|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:38:59.212|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-13|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-13|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:38:59.212|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-13|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-13|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:39:09.185|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-13|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-13|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@790ba3a0: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:39:09.186|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-14|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-14|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:39:14.147|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-14|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-14|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:39:14.147|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-14|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-14|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:39:24.116|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-14|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-14|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@3997880f: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:39:24.117|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-15|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-15|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:39:29.072|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-15|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-15|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:39:29.072|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-15|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-15|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:39:39.041|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-15|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-15|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@23688a34: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:39:39.042|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-16|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-16|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:39:43.997|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-16|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-16|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:39:43.997|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-16|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-16|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:39:53.967|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-16|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-16|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@63ec3ba3: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:39:53.968|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-17|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-17|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:39:58.926|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-17|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-17|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:39:58.926|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-17|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-17|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:40:08.902|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-17|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-17|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@32ec9ab7: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 12:40:08.903|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-18|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-18|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:40:13.865|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-18|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-18|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpIOException: java.io.IOException
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:70) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:214) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2089) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.io.IOException
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:129) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel.wrap(AMQChannel.java:125) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:396) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: com.rabbitmq.client.ShutdownSignalException: connection error
	at com.rabbitmq.utility.ValueOrException.getValue(ValueOrException.java:66) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.utility.BlockingValueOrException.uninterruptibleGetValue(BlockingValueOrException.java:36) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQChannel$BlockingRpcContinuation.getReply(AMQChannel.java:502) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection.start(AMQConnection.java:326) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1139) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 12 more
Caused by: java.io.EOFException
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	... 1 more
2020-07-14 12:40:13.865|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-18|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-18|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:15672]
2020-07-14 12:40:22.215|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 12:40:22.220|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594701622215, current=DOWN, previous=UP]
2020-07-14 12:40:22.222|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 12:40:22.235|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 12:40:22.328|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 12:40:22.328|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 12:40:23.225|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 12:40:23.256|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 12:40:23.312|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 12:40:23.314|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 12:40:23.364|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 12:40:23.396|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 12:40:26.405|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 12:40:26.417|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 12:40:26.458|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 12:40:48.467|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 12:40:50.147|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam.demo]' package. Please check your configuration.
2020-07-14 12:40:50.440|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 12:40:50.570|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 115ms. Found 2 JPA repository interfaces.
2020-07-14 12:40:50.861|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 12:40:50.894|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 12:40:51.453|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=efb252de-23d0-30e4-b441-68ffc96c502c
2020-07-14 12:40:51.608|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 12:40:52.339|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 12:40:52.352|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 12:40:52.353|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 12:40:52.353|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 12:40:52.618|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 12:40:52.619|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4110 ms
2020-07-14 12:40:52.894|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 12:40:52.895|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 12:40:52.909|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@857f74a
2020-07-14 12:40:53.269|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 12:40:53.284|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 12:40:53.286|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 12:40:53.500|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 12:40:53.675|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 12:40:53.878|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 12:40:54.172|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 12:40:54.563|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 12:40:54.920|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 12:40:55.681|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 12:40:55.943|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 12:40:56.456|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 12:40:56.485|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 12:40:57.105|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 12:40:58.861|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 12:40:58.968|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 12:40:59.182|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 12:40:59.182|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 12:41:01.085|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 12:41:01.658|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 12:41:01.713|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 12:41:01.811|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 12:41:01.812|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 12:41:02.045|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 12:41:02.046|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 12:41:02.453|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 12:41:03.154|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 12:41:03.155|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 12:41:03.155|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 12:41:03.155|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 12:41:03.155|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 12:41:03.155|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 12:41:03.155|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 12:41:03.410|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 12:41:03.415|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 12:41:03.420|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 12:41:03.426|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594701663423 with initial instances count: 1
2020-07-14 12:41:03.430|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 12:41:03.431|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594701663431, current=UP, previous=STARTING]
2020-07-14 12:41:03.434|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 12:41:03.435|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 12:41:03.485|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 12:41:03.491|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 12:41:03.492|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 12:41:04.370|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 12:41:04.388|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 12:41:04.425|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 12:41:04.539|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 12:41:04.603|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#27a6384b:0/SimpleConnection@38613df7 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 53049]
2020-07-14 12:41:04.697|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 12:41:04.698|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 12:41:04.718|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 20.861 seconds (JVM running for 26.482)
2020-07-14 12:41:04.909|INFO |RMI TCP Connection(1)-192.168.106.1|RMI TCP Connection(1)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 12:41:04.909|INFO |RMI TCP Connection(1)-192.168.106.1|RMI TCP Connection(1)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 12:41:04.938|INFO |RMI TCP Connection(1)-192.168.106.1|RMI TCP Connection(1)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 27 ms
2020-07-14 12:46:03.159|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 12:51:03.161|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 12:56:03.163|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 13:01:03.164|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 13:02:21.299|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 13:02:21.300|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594702941300, current=DOWN, previous=UP]
2020-07-14 13:02:21.300|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 13:02:21.308|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 13:02:21.316|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 13:02:21.587|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 13:02:22.288|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 13:02:22.303|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 13:02:22.308|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 13:02:22.308|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 13:02:22.322|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 13:02:22.326|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 13:02:25.329|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 13:02:25.338|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 13:02:25.359|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 14:17:43.619|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 14:17:45.987|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam.demo]' package. Please check your configuration.
2020-07-14 14:17:46.530|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 14:17:46.737|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 188ms. Found 2 JPA repository interfaces.
2020-07-14 14:17:47.099|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 14:17:47.158|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 14:17:47.689|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=efb252de-23d0-30e4-b441-68ffc96c502c
2020-07-14 14:17:47.903|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 14:17:48.996|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 14:17:49.011|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 14:17:49.012|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 14:17:49.012|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 14:17:49.448|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 14:17:49.449|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 5769 ms
2020-07-14 14:17:49.754|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 14:17:49.755|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 14:17:49.778|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@cf9bd1e
2020-07-14 14:17:50.364|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 14:17:50.393|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 14:17:50.395|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 14:17:50.748|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 14:17:50.877|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 14:17:51.111|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 14:17:51.710|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 14:17:52.148|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 14:17:52.764|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 14:17:54.325|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 14:17:54.560|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 14:17:54.963|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 14:17:54.998|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 14:17:55.650|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 14:17:58.274|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 14:17:58.451|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 14:17:58.672|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 14:17:58.672|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 14:18:01.149|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 14:18:01.837|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 14:18:01.933|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 14:18:02.125|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 14:18:02.125|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 14:18:02.522|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 14:18:02.523|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 14:18:03.657|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 14:18:04.736|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 14:18:04.736|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 14:18:04.736|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 14:18:04.736|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 14:18:04.737|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 14:18:04.737|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 14:18:04.737|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 14:18:05.103|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 14:18:05.107|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 14:18:05.121|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 14:18:05.146|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594707485128 with initial instances count: 0
2020-07-14 14:18:05.152|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 14:18:05.153|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594707485153, current=UP, previous=STARTING]
2020-07-14 14:18:05.160|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 14:18:05.187|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 14:18:05.252|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 14:18:05.254|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 14:18:05.409|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 14:18:06.503|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 14:18:06.576|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 14:18:06.669|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 14:18:06.856|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 14:18:06.946|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#49353d43:0/SimpleConnection@c444506 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 58929]
2020-07-14 14:18:07.119|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 14:18:07.120|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 14:18:07.152|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 28.797 seconds (JVM running for 35.8)
2020-07-14 14:18:09.931|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 14:18:09.932|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 14:18:09.967|INFO |RMI TCP Connection(14)-192.168.106.1|RMI TCP Connection(14)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 27 ms
2020-07-14 14:18:35.109|INFO |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 14:18:35.109|INFO |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 14:18:35.109|INFO |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 14:18:35.109|INFO |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 14:18:35.109|INFO |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 14:18:35.109|INFO |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: false
2020-07-14 14:18:35.109|INFO |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 14:18:35.166|INFO |DiscoveryClient-CacheRefreshExecutor-0|DiscoveryClient-CacheRefreshExecutor-0|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 14:23:04.744|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 14:28:04.749|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 14:33:04.750|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 14:38:04.751|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 14:43:04.752|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 14:48:04.759|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 14:53:04.762|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 14:58:04.764|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:03:04.765|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:08:04.766|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:13:04.768|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:18:04.771|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:19:09.417|WARN |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.log() 129|Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener threw exception
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.wrapToListenerExecutionFailedExceptionIfNeeded(AbstractMessageListenerContainer.java:1693) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1583) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:963) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:913) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:81) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1284) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1190) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: org.springframework.amqp.support.converter.MessageConversionException: failed to convert serialized Message content
	at org.springframework.amqp.support.converter.SimpleMessageConverter.fromMessage(SimpleMessageConverter.java:114) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:302) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:323) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:205) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:132) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 10 more
Caused by: java.lang.IllegalStateException: Could not deserialize object type
	at org.springframework.amqp.utils.SerializationUtils.deserialize(SerializationUtils.java:97) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.SimpleMessageConverter.fromMessage(SimpleMessageConverter.java:110) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:302) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:323) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:205) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:132) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 10 more
Caused by: java.lang.ClassNotFoundException: com.adam.demo.entity.XcTask
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_211]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_211]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_211]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_211]
	at java.lang.Class.forName0(Native Method) ~[?:1.8.0_211]
	at java.lang.Class.forName(Class.java:348) ~[?:1.8.0_211]
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:285) ~[spring-core-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.core.ConfigurableObjectInputStream.resolveClass(ConfigurableObjectInputStream.java:76) ~[spring-core-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.amqp.support.converter.SimpleMessageConverter$1.resolveClass(SimpleMessageConverter.java:178) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1868) ~[?:1.8.0_211]
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751) ~[?:1.8.0_211]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042) ~[?:1.8.0_211]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573) ~[?:1.8.0_211]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431) ~[?:1.8.0_211]
	at org.springframework.amqp.utils.SerializationUtils.deserialize(SerializationUtils.java:91) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.SimpleMessageConverter.fromMessage(SimpleMessageConverter.java:110) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:302) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:323) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:205) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:132) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 10 more
2020-07-14 15:19:09.426|WARN |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler$DefaultExceptionStrategy.logFatalException() 193|Fatal message conversion error; message rejected; it will be dropped or routed to a dead letter exchange, if so configured: (Body:'[B@539991d7(byte[629])' MessageProperties [headers={}, contentType=application/x-java-serialized-object, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=ex_learning_addchoosecourse, receivedRoutingKey=addchoosecourse, deliveryTag=1, consumerTag=amq.ctag-zqgQXLGmXUkPZZ-jOcxayw, consumerQueue=xc_learning_addchoosecourse])
2020-07-14 15:19:09.426|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.invokeErrorHandler() 1386|Execution of Rabbit message listener failed, and the error handler threw an exception
org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal
	at org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:116) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1383) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1667) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1442) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:963) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:913) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:81) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1284) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1190) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener threw exception
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.wrapToListenerExecutionFailedExceptionIfNeeded(AbstractMessageListenerContainer.java:1693) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1583) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 6 more
Caused by: org.springframework.amqp.support.converter.MessageConversionException: failed to convert serialized Message content
	at org.springframework.amqp.support.converter.SimpleMessageConverter.fromMessage(SimpleMessageConverter.java:114) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:302) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:323) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:205) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:132) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 6 more
Caused by: java.lang.IllegalStateException: Could not deserialize object type
	at org.springframework.amqp.utils.SerializationUtils.deserialize(SerializationUtils.java:97) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.SimpleMessageConverter.fromMessage(SimpleMessageConverter.java:110) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:302) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:323) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:205) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:132) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 6 more
Caused by: java.lang.ClassNotFoundException: com.adam.demo.entity.XcTask
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[?:1.8.0_211]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_211]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[?:1.8.0_211]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_211]
	at java.lang.Class.forName0(Native Method) ~[?:1.8.0_211]
	at java.lang.Class.forName(Class.java:348) ~[?:1.8.0_211]
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:285) ~[spring-core-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.core.ConfigurableObjectInputStream.resolveClass(ConfigurableObjectInputStream.java:76) ~[spring-core-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.amqp.support.converter.SimpleMessageConverter$1.resolveClass(SimpleMessageConverter.java:178) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1868) ~[?:1.8.0_211]
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751) ~[?:1.8.0_211]
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042) ~[?:1.8.0_211]
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573) ~[?:1.8.0_211]
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431) ~[?:1.8.0_211]
	at org.springframework.amqp.utils.SerializationUtils.deserialize(SerializationUtils.java:91) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.SimpleMessageConverter.fromMessage(SimpleMessageConverter.java:110) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener.extractMessage(AbstractAdaptableMessageListener.java:302) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter$MessagingMessageConverterAdapter.extractPayload(MessagingMessageListenerAdapter.java:323) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.support.converter.MessagingMessageConverter.fromMessage(MessagingMessageConverter.java:122) ~[spring-amqp-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.toMessagingMessage(MessagingMessageListenerAdapter.java:205) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:132) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1579) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1498) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1486) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1477) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1421) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 6 more
2020-07-14 15:23:04.775|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:25:21.611|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 15:25:21.615|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594711521611, current=DOWN, previous=UP]
2020-07-14 15:25:21.616|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 15:25:21.640|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 15:25:21.796|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 15:25:22.735|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 15:25:23.503|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 15:25:23.543|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 15:25:23.583|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 15:25:23.585|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 15:25:23.594|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 15:25:23.617|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 15:25:26.625|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 15:25:26.635|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 15:25:26.701|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 15:32:02.296|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 15:32:04.047|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam.demo]' package. Please check your configuration.
2020-07-14 15:32:05.145|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 15:32:05.562|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 334ms. Found 2 JPA repository interfaces.
2020-07-14 15:32:05.985|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 15:32:06.025|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 15:32:06.681|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=61629e11-b3ca-300d-a1d5-9bc81536aba1
2020-07-14 15:32:07.347|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 15:32:08.941|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 15:32:08.985|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 15:32:08.987|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 15:32:08.988|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 15:32:09.443|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 15:32:09.443|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 7083 ms
2020-07-14 15:32:09.618|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 15:32:09.620|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 15:32:09.635|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@56478522
2020-07-14 15:32:10.081|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 15:32:10.097|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 15:32:10.099|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 15:32:10.309|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 15:32:10.384|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 15:32:10.613|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 15:32:11.085|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 15:32:11.578|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 15:32:12.049|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 15:32:12.464|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 15:32:12.970|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 15:32:13.605|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 15:32:13.623|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 15:32:14.052|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 15:32:15.676|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 15:32:15.772|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 15:32:15.922|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 15:32:15.922|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 15:32:18.037|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 15:32:18.331|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 15:32:18.383|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 15:32:18.480|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 15:32:18.481|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 15:32:18.681|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 15:32:18.681|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 15:32:19.132|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:32:19.718|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 15:32:19.718|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 15:32:19.718|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 15:32:19.718|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 15:32:19.718|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 15:32:19.718|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 15:32:19.718|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 15:32:19.976|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 15:32:19.979|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 15:32:19.982|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 15:32:19.989|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594711939986 with initial instances count: 1
2020-07-14 15:32:19.993|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 15:32:19.994|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594711939994, current=UP, previous=STARTING]
2020-07-14 15:32:19.997|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 15:32:19.998|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 15:32:20.039|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 15:32:20.041|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 15:32:20.050|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 15:32:20.922|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 15:32:20.947|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 15:32:21.006|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 15:32:21.114|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 15:32:21.166|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#6ba355e4:0/SimpleConnection@345b558f [delegate=amqp://guest@192.168.106.129:5672/, localPort= 50928]
2020-07-14 15:32:21.246|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 15:32:21.246|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 15:32:21.265|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 23.395 seconds (JVM running for 29.122)
2020-07-14 15:32:24.150|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 15:32:24.150|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 15:32:24.173|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 17 ms
2020-07-14 15:37:19.736|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:39:36.332|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|com.adam.demo.mq.ChooseCourseTask.receiveChoosecourseTask() 32|receive choose course task,taskId:222
2020-07-14 15:40:27.758|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|com.adam.demo.mq.ChooseCourseTask.receiveChoosecourseTask() 55|send finish choose course taskId:222
2020-07-14 15:42:19.746|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:47:19.748|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:52:19.751|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 15:57:19.755|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:00:17.741|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 16:00:17.746|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594713617741, current=DOWN, previous=UP]
2020-07-14 16:00:17.748|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:00:17.988|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:00:18.019|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 16:00:18.513|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 16:00:19.245|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 16:00:19.277|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:00:19.297|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 16:00:19.298|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 16:00:19.325|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 16:00:19.340|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 16:00:22.350|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 16:00:22.371|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 16:00:22.430|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 16:00:48.170|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 16:00:49.733|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam.demo]' package. Please check your configuration.
2020-07-14 16:00:50.097|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 16:00:50.223|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 114ms. Found 2 JPA repository interfaces.
2020-07-14 16:00:50.487|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 16:00:50.515|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 16:00:51.056|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=61629e11-b3ca-300d-a1d5-9bc81536aba1
2020-07-14 16:00:51.268|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 16:00:52.456|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 16:00:52.479|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 16:00:52.479|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 16:00:52.480|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 16:00:52.843|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 16:00:52.843|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4644 ms
2020-07-14 16:00:53.132|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:00:53.135|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:00:53.170|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@571d0925
2020-07-14 16:00:53.819|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 16:00:53.837|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 16:00:53.839|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 16:00:54.075|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 16:00:54.156|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 16:00:54.368|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 16:00:54.812|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 16:00:55.140|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 16:00:55.660|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 16:00:56.485|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 16:00:56.646|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:00:57.185|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 16:00:57.203|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:00:57.632|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:00:59.284|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 16:00:59.386|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 16:00:59.537|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:00:59.537|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:01:01.442|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 16:01:01.701|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 16:01:01.744|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 16:01:01.835|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 16:01:01.835|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 16:01:02.018|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 16:01:02.018|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 16:01:02.435|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:01:03.083|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 16:01:03.083|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 16:01:03.083|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 16:01:03.083|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 16:01:03.084|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 16:01:03.084|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 16:01:03.084|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 16:01:03.353|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 16:01:03.357|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 16:01:03.361|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 16:01:03.365|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594713663364 with initial instances count: 1
2020-07-14 16:01:03.368|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 16:01:03.369|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594713663369, current=UP, previous=STARTING]
2020-07-14 16:01:03.372|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 16:01:03.373|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:01:03.423|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 16:01:03.426|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:01:03.426|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 16:01:04.346|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 16:01:04.369|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 16:01:04.411|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 16:01:04.523|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 16:01:04.607|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#16cb6f51:0/SimpleConnection@6b981dea [delegate=amqp://guest@192.168.106.129:5672/, localPort= 54601]
2020-07-14 16:01:04.710|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:01:04.710|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:01:04.727|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 20.094 seconds (JVM running for 24.188)
2020-07-14 16:01:07.066|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 16:01:07.066|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 16:01:07.092|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 26 ms
2020-07-14 16:02:35.722|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 16:02:35.722|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594713755722, current=DOWN, previous=UP]
2020-07-14 16:02:35.722|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:02:35.730|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:02:35.736|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 16:02:35.776|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 16:02:36.636|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 16:02:36.650|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:02:36.654|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 16:02:36.654|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 16:02:36.668|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 16:02:36.671|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 16:02:39.673|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 16:02:39.682|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 16:02:39.702|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 16:16:25.489|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 16:16:27.475|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam]' package. Please check your configuration.
2020-07-14 16:16:27.806|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 16:16:27.930|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 111ms. Found 2 JPA repository interfaces.
2020-07-14 16:16:28.109|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 16:16:28.140|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 16:16:28.536|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=0009a363-713d-362e-9c42-d791539aaec4
2020-07-14 16:16:28.773|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 16:16:29.514|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 16:16:29.527|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 16:16:29.528|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 16:16:29.528|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 16:16:29.844|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 16:16:29.845|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4314 ms
2020-07-14 16:16:30.047|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:16:30.050|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:16:30.067|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@545604a9
2020-07-14 16:16:30.659|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 16:16:30.676|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 16:16:30.678|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 16:16:30.969|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 16:16:31.046|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 16:16:31.217|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 16:16:31.675|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 16:16:32.214|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 16:16:32.777|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 16:16:33.551|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 16:16:34.043|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:16:34.702|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 16:16:34.724|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:16:35.250|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:16:37.469|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 16:16:37.596|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 16:16:37.782|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:16:37.782|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:16:40.873|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 16:16:41.181|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 16:16:41.230|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 16:16:41.341|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 16:16:41.341|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 16:16:41.567|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 16:16:41.567|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 16:16:42.101|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:16:42.723|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 16:16:42.724|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 16:16:42.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 16:16:42.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 16:16:42.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 16:16:42.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 16:16:42.725|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 16:16:43.022|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 16:16:43.029|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 16:16:43.034|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 16:16:43.045|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594714603039 with initial instances count: 1
2020-07-14 16:16:43.051|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 16:16:43.052|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594714603052, current=UP, previous=STARTING]
2020-07-14 16:16:43.058|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 16:16:43.061|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:16:43.132|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:16:43.170|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 16:16:43.172|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 16:16:44.220|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 16:16:44.240|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 16:16:44.286|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 16:16:44.452|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 16:16:44.529|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#16c8e9b8:0/SimpleConnection@4d2eb4c6 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 56431]
2020-07-14 16:16:44.631|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:16:44.632|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:16:44.655|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 30.594 seconds (JVM running for 36.392)
2020-07-14 16:16:45.080|INFO |RMI TCP Connection(1)-192.168.106.1|RMI TCP Connection(1)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 16:16:45.080|INFO |RMI TCP Connection(1)-192.168.106.1|RMI TCP Connection(1)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 16:16:45.109|INFO |RMI TCP Connection(1)-192.168.106.1|RMI TCP Connection(1)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 29 ms
2020-07-14 16:21:33.112|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 16:21:33.112|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594714893112, current=DOWN, previous=UP]
2020-07-14 16:21:33.112|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:21:33.119|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:21:33.124|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 16:21:33.883|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 16:21:34.572|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 16:21:34.584|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:21:34.589|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 16:21:34.589|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 16:21:34.609|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 16:21:34.612|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 16:21:37.614|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 16:21:37.621|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 16:21:37.634|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 16:21:58.895|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 16:22:00.499|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam]' package. Please check your configuration.
2020-07-14 16:22:00.860|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 16:22:00.989|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 118ms. Found 2 JPA repository interfaces.
2020-07-14 16:22:01.172|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 16:22:01.206|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 16:22:01.617|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=0009a363-713d-362e-9c42-d791539aaec4
2020-07-14 16:22:02.103|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 16:22:03.429|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 16:22:03.442|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 16:22:03.442|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 16:22:03.442|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 16:22:03.699|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 16:22:03.700|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4769 ms
2020-07-14 16:22:03.881|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:22:03.882|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:22:03.898|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@11c3d22f
2020-07-14 16:22:04.348|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 16:22:04.369|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 16:22:04.372|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 16:22:04.597|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 16:22:04.671|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 16:22:04.867|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 16:22:05.282|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 16:22:05.678|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 16:22:06.140|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 16:22:06.609|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 16:22:07.126|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:22:07.747|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 16:22:07.764|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:22:08.201|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:22:09.894|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 16:22:09.992|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 16:22:10.144|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:22:10.145|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:22:12.461|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 16:22:12.815|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 16:22:12.865|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 16:22:12.991|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 16:22:12.991|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 16:22:13.354|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 16:22:13.354|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 16:22:14.008|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:22:15.165|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 16:22:15.166|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 16:22:15.166|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 16:22:15.166|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 16:22:15.166|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 16:22:15.166|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 16:22:15.166|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 16:22:15.785|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 16:22:15.791|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 16:22:15.797|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 16:22:15.806|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594714935802 with initial instances count: 1
2020-07-14 16:22:15.816|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 16:22:15.820|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594714935818, current=UP, previous=STARTING]
2020-07-14 16:22:15.825|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:22:15.827|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 16:22:15.890|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:22:15.897|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 16:22:15.899|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 16:22:17.070|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 16:22:17.093|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 16:22:17.144|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 16:22:17.289|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 16:22:17.359|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#706d2bae:0/SimpleConnection@3ca07d9 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 57120]
2020-07-14 16:22:17.459|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:22:17.460|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:22:17.483|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 22.898 seconds (JVM running for 27.72)
2020-07-14 16:22:18.470|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 16:22:18.471|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 16:22:18.496|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 25 ms
2020-07-14 16:27:15.170|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:31:19.558|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 16:31:19.559|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594715479558, current=DOWN, previous=UP]
2020-07-14 16:31:19.559|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:31:19.573|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:31:19.580|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 16:31:19.917|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 16:31:20.738|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 16:31:20.755|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:31:20.760|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 16:31:20.761|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 16:31:20.780|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 16:31:20.786|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 16:31:23.789|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 16:31:23.835|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 16:31:23.854|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 16:31:45.128|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 16:31:46.991|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam]' package. Please check your configuration.
2020-07-14 16:31:47.336|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 16:31:47.750|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 402ms. Found 2 JPA repository interfaces.
2020-07-14 16:31:48.104|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 16:31:48.141|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 16:31:48.683|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=0009a363-713d-362e-9c42-d791539aaec4
2020-07-14 16:31:49.451|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 16:31:51.701|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 16:31:51.715|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 16:31:51.715|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 16:31:51.716|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 16:31:51.986|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 16:31:51.986|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 6821 ms
2020-07-14 16:31:52.211|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:31:52.213|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:31:52.238|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6591f8ea
2020-07-14 16:31:52.776|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 16:31:52.792|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 16:31:52.794|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 16:31:53.134|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 16:31:53.309|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 16:31:53.532|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 16:31:54.004|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 16:31:54.430|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 16:31:54.925|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 16:31:55.857|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 16:31:56.079|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:31:56.783|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 16:31:56.806|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:31:57.342|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:31:59.202|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 16:31:59.300|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 16:31:59.452|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:31:59.452|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:32:01.639|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 16:32:01.940|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 16:32:01.985|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 16:32:02.080|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 16:32:02.081|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 16:32:02.336|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 16:32:02.337|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 16:32:02.724|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:32:03.331|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 16:32:03.331|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 16:32:03.331|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 16:32:03.331|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 16:32:03.331|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 16:32:03.332|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 16:32:03.332|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 16:32:03.582|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 16:32:03.585|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 16:32:03.590|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 16:32:03.594|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594715523593 with initial instances count: 1
2020-07-14 16:32:03.597|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 16:32:03.599|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594715523598, current=UP, previous=STARTING]
2020-07-14 16:32:03.602|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:32:03.605|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 16:32:03.646|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 16:32:03.648|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 16:32:03.657|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:32:04.565|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 16:32:04.582|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 16:32:04.625|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 16:32:04.732|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 16:32:04.783|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#6247c08c:0/SimpleConnection@2ac50ab0 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 58144]
2020-07-14 16:32:04.865|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:32:04.865|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:32:04.888|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 25.197 seconds (JVM running for 30.007)
2020-07-14 16:32:06.580|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 16:32:06.580|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 16:32:06.603|INFO |RMI TCP Connection(9)-192.168.106.1|RMI TCP Connection(9)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 18 ms
2020-07-14 16:37:03.337|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:39:16.163|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 16:39:16.163|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594715956163, current=DOWN, previous=UP]
2020-07-14 16:39:16.163|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:39:16.171|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:39:16.177|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 16:39:17.176|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 16:39:17.907|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 16:39:17.919|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:39:17.923|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 16:39:17.923|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 16:39:17.934|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 16:39:17.939|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 16:39:20.942|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 16:39:20.972|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 16:39:20.987|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 16:43:32.807|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 16:43:35.227|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam]' package. Please check your configuration.
2020-07-14 16:43:35.898|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 16:43:36.249|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 323ms. Found 2 JPA repository interfaces.
2020-07-14 16:43:37.149|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 16:43:37.252|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 16:43:37.999|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=f84c561c-64cd-3350-95dc-762c6bf046a2
2020-07-14 16:43:38.414|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 16:43:40.217|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 16:43:40.238|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 16:43:40.238|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 16:43:40.239|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 16:43:40.645|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 16:43:40.646|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 7791 ms
2020-07-14 16:43:40.895|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:43:40.897|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:43:40.920|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@75f4d8a8
2020-07-14 16:43:41.606|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 16:43:41.638|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 16:43:41.645|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 16:43:42.114|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 16:43:42.235|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 16:43:42.488|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 16:43:43.026|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 16:43:44.106|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 16:43:45.355|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 16:43:48.427|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 16:43:48.854|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:43:49.056|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 16:43:49.093|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:43:51.549|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:44:00.786|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 16:44:01.051|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 16:44:01.939|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:44:01.939|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:44:05.573|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 16:44:06.378|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 16:44:06.490|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 16:44:06.859|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 16:44:06.860|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 16:44:07.240|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 16:44:07.240|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 16:44:07.995|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:44:08.855|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 16:44:08.856|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 16:44:08.856|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 16:44:08.856|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 16:44:08.857|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 16:44:08.857|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 16:44:08.857|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 16:44:09.269|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 16:44:09.274|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 16:44:09.281|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 16:44:09.287|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594716249285 with initial instances count: 1
2020-07-14 16:44:09.295|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 16:44:09.296|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594716249296, current=UP, previous=STARTING]
2020-07-14 16:44:09.300|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:44:09.300|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 16:44:09.358|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 16:44:09.360|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 16:44:09.363|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:44:10.596|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 16:44:10.626|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 16:44:10.680|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 16:44:10.833|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 16:44:10.908|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#146db8a6:0/SimpleConnection@7ed47927 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 59440]
2020-07-14 16:44:11.016|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:44:11.017|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:44:11.050|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 42.775 seconds (JVM running for 48.429)
2020-07-14 16:44:12.794|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 16:44:12.795|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 16:44:12.831|INFO |RMI TCP Connection(10)-192.168.106.1|RMI TCP Connection(10)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 30 ms
2020-07-14 16:44:30.458|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 16:44:30.458|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594716270458, current=DOWN, previous=UP]
2020-07-14 16:44:30.459|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:44:30.467|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:44:30.470|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 16:44:31.120|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 16:44:31.971|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 16:44:31.984|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:44:31.989|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 16:44:31.989|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 16:44:32.002|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 16:44:32.005|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 16:44:35.007|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 16:44:35.015|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 16:44:35.029|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 16:48:49.051|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 16:48:50.882|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam]' package. Please check your configuration.
2020-07-14 16:48:51.226|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 16:48:51.365|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 127ms. Found 2 JPA repository interfaces.
2020-07-14 16:48:51.580|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 16:48:51.615|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 16:48:52.071|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=f84c561c-64cd-3350-95dc-762c6bf046a2
2020-07-14 16:48:52.255|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 16:48:53.135|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 16:48:53.148|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 16:48:53.149|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 16:48:53.149|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 16:48:53.457|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 16:48:53.459|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4371 ms
2020-07-14 16:48:53.686|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:48:53.687|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:48:53.708|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4b7ab7ab
2020-07-14 16:48:54.310|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 16:48:54.330|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 16:48:54.333|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 16:48:54.561|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 16:48:54.644|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 16:48:54.946|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 16:48:55.321|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 16:48:55.618|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 16:48:56.083|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 16:48:56.558|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 16:48:57.029|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:48:57.609|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 16:48:57.627|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:48:58.135|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:48:59.932|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 16:49:00.050|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 16:49:00.194|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:49:00.194|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:49:02.036|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 16:49:02.292|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 16:49:02.338|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 16:49:02.433|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 16:49:02.433|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 16:49:02.611|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 16:49:02.611|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 16:49:03.034|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:49:03.639|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 16:49:03.640|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 16:49:03.640|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 16:49:03.640|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 16:49:03.640|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 16:49:03.640|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 16:49:03.640|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 16:49:03.865|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 16:49:03.874|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 16:49:03.878|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 16:49:03.888|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594716543882 with initial instances count: 1
2020-07-14 16:49:03.895|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 16:49:03.896|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594716543896, current=UP, previous=STARTING]
2020-07-14 16:49:03.900|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:49:03.902|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 16:49:03.958|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 16:49:03.959|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:49:03.960|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 16:49:04.850|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 16:49:04.866|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 16:49:04.909|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 16:49:05.027|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 16:49:05.085|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#5bba9949:0/SimpleConnection@52fd6b76 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 60064]
2020-07-14 16:49:05.161|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:49:05.162|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:49:05.180|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 20.285 seconds (JVM running for 25.598)
2020-07-14 16:49:07.333|INFO |RMI TCP Connection(3)-192.168.106.1|RMI TCP Connection(3)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 16:49:07.333|INFO |RMI TCP Connection(3)-192.168.106.1|RMI TCP Connection(3)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 16:49:07.354|INFO |RMI TCP Connection(3)-192.168.106.1|RMI TCP Connection(3)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 15 ms
2020-07-14 16:54:03.644|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:54:13.009|WARN |pool-2-thread-4|pool-2-thread-4|org.springframework.amqp.rabbit.listener.BlockingQueueConsumer.handleCancel() 861|Cancel received for amq.ctag-WytujdNZ_H63NouDLBtAug (xc_learning_addchoosecourse); Consumer@184cd907: tags=[[amq.ctag-WytujdNZ_H63NouDLBtAug]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@192.168.106.129:5672/,1), conn: Proxy@7d9a7fd8 Shared Rabbit Connection: SimpleConnection@52fd6b76 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 60064], acknowledgeMode=AUTO local queue size=0
2020-07-14 16:54:13.827|WARN |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.logConsumerException() 1445|Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.rabbit.support.ConsumerCancelledException
2020-07-14 16:54:13.828|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@184cd907: tags=[[]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@192.168.106.129:5672/,1), conn: Proxy@7d9a7fd8 Shared Rabbit Connection: SimpleConnection@52fd6b76 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 60064], acknowledgeMode=AUTO local queue size=0
2020-07-14 16:54:21.695|WARN |pool-2-thread-8|pool-2-thread-8|org.springframework.amqp.rabbit.listener.BlockingQueueConsumer.handleCancel() 861|Cancel received for amq.ctag-3UEZEPxXx77y6FuNQwERNQ (xc_learning_addchoosecourse); Consumer@79c427b9: tags=[[amq.ctag-3UEZEPxXx77y6FuNQwERNQ]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@192.168.106.129:5672/,2), conn: Proxy@7d9a7fd8 Shared Rabbit Connection: SimpleConnection@52fd6b76 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 60064], acknowledgeMode=AUTO local queue size=0
2020-07-14 16:54:21.871|WARN |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.logConsumerException() 1445|Consumer raised exception, processing can restart if the connection factory supports it. Exception summary: org.springframework.amqp.rabbit.support.ConsumerCancelledException
2020-07-14 16:54:21.871|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@79c427b9: tags=[[]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@192.168.106.129:5672/,2), conn: Proxy@7d9a7fd8 Shared Rabbit Connection: SimpleConnection@52fd6b76 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 60064], acknowledgeMode=AUTO local queue size=0
2020-07-14 16:56:55.736|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 16:56:55.736|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594717015736, current=DOWN, previous=UP]
2020-07-14 16:56:55.736|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:56:55.743|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:56:55.747|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 16:56:56.009|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 16:56:56.873|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 16:56:56.888|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:56:56.892|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 16:56:56.892|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 16:56:56.907|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 16:56:56.910|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 16:56:59.913|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 16:56:59.925|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 16:56:59.942|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 16:57:20.193|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 16:57:21.992|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam]' package. Please check your configuration.
2020-07-14 16:57:22.437|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 16:57:22.580|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 128ms. Found 2 JPA repository interfaces.
2020-07-14 16:57:22.770|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 16:57:22.801|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 16:57:23.194|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=f84c561c-64cd-3350-95dc-762c6bf046a2
2020-07-14 16:57:23.507|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 16:57:24.363|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 16:57:24.382|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 16:57:24.383|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 16:57:24.383|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 16:57:24.679|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 16:57:24.679|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4449 ms
2020-07-14 16:57:24.850|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:57:24.851|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:57:24.867|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@65f5cae3
2020-07-14 16:57:25.271|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 16:57:25.289|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 16:57:25.292|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 16:57:25.493|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 16:57:25.561|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 16:57:25.786|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 16:57:26.211|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 16:57:26.633|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 16:57:27.192|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 16:57:28.308|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 16:57:28.488|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:57:28.907|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 16:57:28.923|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 16:57:29.431|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:57:31.195|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 16:57:31.351|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 16:57:31.540|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 16:57:31.540|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 16:57:33.622|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 16:57:33.999|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 16:57:34.046|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 16:57:34.135|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 16:57:34.135|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 16:57:34.317|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 16:57:34.317|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 16:57:34.837|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 16:57:35.519|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 16:57:35.519|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 16:57:35.519|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 16:57:35.519|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 16:57:35.519|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 16:57:35.520|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 16:57:35.520|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 16:57:35.967|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 16:57:35.976|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 16:57:35.985|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 16:57:35.995|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594717055992 with initial instances count: 1
2020-07-14 16:57:36.004|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 16:57:36.005|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594717056005, current=UP, previous=STARTING]
2020-07-14 16:57:36.011|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 16:57:36.012|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 16:57:36.087|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 16:57:36.087|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 16:57:36.089|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 16:57:37.175|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 16:57:37.197|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 16:57:37.243|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 16:57:37.383|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 16:57:37.437|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#6719f206:0/SimpleConnection@35353b68 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 61081]
2020-07-14 16:57:37.544|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 16:57:37.545|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 16:57:37.579|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 21.588 seconds (JVM running for 26.391)
2020-07-14 16:57:38.702|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 16:57:38.702|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 16:57:38.725|INFO |RMI TCP Connection(2)-192.168.106.1|RMI TCP Connection(2)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 22 ms
2020-07-14 17:01:20.881|WARN |AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|com.rabbitmq.client.impl.ForgivingExceptionHandler.log() 115|An unexpected connection driver error occured (Exception message: Connection reset)
2020-07-14 17:01:20.885|ERROR|AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.log() 1566|Channel shutdown: connection error
2020-07-14 17:01:20.886|ERROR|AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.log() 1566|Channel shutdown: connection error
2020-07-14 17:01:21.448|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@3c06d119: tags=[[amq.ctag-ivz2irow2tiFJ7ICKcdXwg]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@192.168.106.129:5672/,1), conn: Proxy@7224ab89 Shared Rabbit Connection: SimpleConnection@35353b68 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 61081], acknowledgeMode=AUTO local queue size=0
2020-07-14 17:01:21.452|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 17:16:42.634|WARN |HikariPool-1 housekeeper|HikariPool-1 housekeeper|com.zaxxer.hikari.pool.HikariPool.run() 787|HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m47s16ms792µs100ns).
2020-07-14 17:16:57.030|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection timed out: connect
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:61) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareChannel(CachingConnectionFactory.java:702) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:676) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getChannel(CachingConnectionFactory.java:567) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.access$1600(CachingConnectionFactory.java:102) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ChannelCachingConnectionProxy.createChannel(CachingConnectionFactory.java:1430) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2095) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.8.0_211]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[?:1.8.0_211]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_211]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_211]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1137) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 16 more
2020-07-14 17:16:57.031|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 17:16:57.076|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#6719f206:2/SimpleConnection@47981e67 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 61620]
2020-07-14 17:17:52.484|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 17:18:21.732|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 17:18:21.732|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594718301732, current=DOWN, previous=UP]
2020-07-14 17:18:21.733|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 17:18:21.739|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 17:18:21.744|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 17:18:22.209|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 17:18:22.900|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 17:18:22.912|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 17:18:22.918|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 17:18:22.918|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 17:18:22.943|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 17:18:22.948|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 17:18:25.952|WARN |DiscoveryClient-0|DiscoveryClient-0|com.netflix.discovery.TimedSupervisorTask.run() 90|task supervisor shutting down, can't accept the task
2020-07-14 17:18:25.954|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 17:18:25.962|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 954|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - deregister  status: 200
2020-07-14 17:18:25.982|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
2020-07-14 17:26:32.920|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStartupProfileInfo() 651|No active profile set, falling back to default profiles: default
2020-07-14 17:26:34.582|WARN |main|main|org.mybatis.spring.mapper.ClassPathMapperScanner.doScan() 166|No MyBatis mapper was found in '[com.adam]' package. Please check your configuration.
2020-07-14 17:26:34.935|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 127|Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-07-14 17:26:35.097|INFO |main|main|org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn() 187|Finished Spring Data repository scanning in 148ms. Found 2 JPA repository interfaces.
2020-07-14 17:26:35.320|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-07-14 17:26:35.372|WARN |main|main|org.springframework.boot.actuate.endpoint.EndpointId.logWarning() 155|Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
2020-07-14 17:26:35.887|INFO |main|main|org.springframework.cloud.context.scope.GenericScope.setSerializationId() 295|BeanFactory id=f84c561c-64cd-3350-95dc-762c6bf046a2
2020-07-14 17:26:36.117|INFO |main|main|org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization() 335|Bean 'com.adam.demo.service.UserService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-07-14 17:26:37.181|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize() 108|Tomcat initialized with port(s): 31003 (http)
2020-07-14 17:26:37.195|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Initializing ProtocolHandler ["http-nio-31003"]
2020-07-14 17:26:37.197|INFO |main|main|org.apache.catalina.core.StandardService.log() 173|Starting service [Tomcat]
2020-07-14 17:26:37.197|INFO |main|main|org.apache.catalina.core.StandardEngine.log() 173|Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-07-14 17:26:37.441|INFO |main|main|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring embedded WebApplicationContext
2020-07-14 17:26:37.441|INFO |main|main|org.springframework.web.context.ContextLoader.prepareWebApplicationContext() 284|Root WebApplicationContext: initialization completed in 4487 ms
2020-07-14 17:26:37.621|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 17:26:37.622|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 17:26:37.640|INFO |main|main|com.netflix.config.DynamicPropertyFactory.getInstance() 281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@abc7005
2020-07-14 17:26:38.082|INFO |main|main|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize() 181|Initializing ExecutorService 'applicationTaskExecutor'
2020-07-14 17:26:38.099|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 110|HikariPool-1 - Starting...
2020-07-14 17:26:38.101|WARN |main|main|com.zaxxer.hikari.util.DriverDataSource.<init>() 70|Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-07-14 17:26:38.333|INFO |main|main|com.zaxxer.hikari.HikariDataSource.getConnection() 123|HikariPool-1 - Start completed.
2020-07-14 17:26:38.410|INFO |task-1|task-1|org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation() 31|HHH000204: Processing PersistenceUnitInfo [name: default]
2020-07-14 17:26:38.698|INFO |task-1|task-1|org.hibernate.Version.logVersion() 44|HHH000412: Hibernate ORM core version 5.4.15.Final
2020-07-14 17:26:39.115|INFO |task-1|task-1|org.hibernate.annotations.common.Version.<clinit>() 49|HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-07-14 17:26:39.459|INFO |task-1|task-1|org.hibernate.dialect.Dialect.<init>() 172|HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2020-07-14 17:26:39.929|WARN |task-1|task-1|org.hibernate.id.UUIDHexGenerator.<init>() 42|HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
2020-07-14 17:26:41.232|WARN |main|main|org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor() 220|spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-07-14 17:26:41.624|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 17:26:42.405|INFO |task-1|task-1|org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService() 52|HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-07-14 17:26:42.439|INFO |task-1|task-1|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory() 416|Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 17:26:43.055|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 17:26:45.066|INFO |main|main|org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>() 58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-07-14 17:26:45.212|INFO |main|main|springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods() 69|Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-07-14 17:26:45.448|WARN |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 121|No URLs will be polled as dynamic configuration sources.
2020-07-14 17:26:45.448|INFO |main|main|com.netflix.config.sources.URLConfigurationSource.<init>() 122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-14 17:26:48.130|WARN |main|main|org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning() 86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-07-14 17:26:48.591|INFO |main|main|org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create() 72|Setting initial instance status as: STARTING
2020-07-14 17:26:48.654|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 371|Initializing Eureka in region us-east-1
2020-07-14 17:26:48.782|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 70|Using JSON encoding codec LegacyJacksonJson
2020-07-14 17:26:48.782|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 71|Using JSON decoding codec LegacyJacksonJson
2020-07-14 17:26:49.182|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 80|Using XML encoding codec XStreamXml
2020-07-14 17:26:49.182|INFO |main|main|com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>() 81|Using XML decoding codec XStreamXml
2020-07-14 17:26:49.846|INFO |main|main|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 17:26:51.110|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 988|Disable delta property : false
2020-07-14 17:26:51.111|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 989|Single vip registry refresh property : null
2020-07-14 17:26:51.111|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 990|Force full registry fetch : false
2020-07-14 17:26:51.111|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 991|Application is null : false
2020-07-14 17:26:51.111|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 992|Registered Applications size is zero : true
2020-07-14 17:26:51.112|INFO |main|main|com.netflix.discovery.DiscoveryClient.fetchRegistry() 994|Application version is -1: true
2020-07-14 17:26:51.112|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1077|Getting all instance registry info from the eureka server
2020-07-14 17:26:51.750|INFO |main|main|com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry() 1086|The response status is 200
2020-07-14 17:26:51.761|INFO |main|main|com.netflix.discovery.DiscoveryClient.initScheduledTasks() 1301|Starting heartbeat executor: renew interval is: 30
2020-07-14 17:26:51.766|INFO |main|main|com.netflix.discovery.InstanceInfoReplicator.<init>() 60|InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-14 17:26:51.776|INFO |main|main|com.netflix.discovery.DiscoveryClient.<init>() 475|Discovery Client initialized at timestamp 1594718811773 with initial instances count: 1
2020-07-14 17:26:51.789|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register() 41|Registering application EUREKA-CONSUMER-DEMO-MY with eureka with status UP
2020-07-14 17:26:51.790|INFO |main|main|com.netflix.discovery.DiscoveryClient.notify() 1337|Saw local status change event StatusChangeEvent [timestamp=1594718811790, current=UP, previous=STARTING]
2020-07-14 17:26:51.795|INFO |main|main|org.apache.coyote.http11.Http11NioProtocol.log() 173|Starting ProtocolHandler ["http-nio-31003"]
2020-07-14 17:26:51.795|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 17:26:51.860|INFO |main|main|org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start() 220|Tomcat started on port(s): 31003 (http) with context path ''
2020-07-14 17:26:51.862|INFO |main|main|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent() 145|Updating port to 31003
2020-07-14 17:26:51.864|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 863|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration status: 204
2020-07-14 17:26:53.396|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 147|Context refreshed
2020-07-14 17:26:53.425|INFO |main|main|springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start() 150|Found 1 custom documentation plugin(s)
2020-07-14 17:26:53.479|INFO |main|main|springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan() 41|Scanning for api listing references
2020-07-14 17:26:53.629|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 17:26:53.709|INFO |main|main|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#146db8a6:0/SimpleConnection@76ed5e7e [delegate=amqp://guest@192.168.106.129:5672/, localPort= 62828]
2020-07-14 17:26:53.842|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 49|Triggering deferred initialization of Spring Data repositories…
2020-07-14 17:26:53.843|INFO |main|main|org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent() 53|Spring Data repositories initialized!
2020-07-14 17:26:53.870|INFO |main|main|com.adam.EurekaConsumerDemoMyApplication.logStarted() 61|Started EurekaConsumerDemoMyApplication in 24.936 seconds (JVM running for 29.09)
2020-07-14 17:26:55.200|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log() 173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-07-14 17:26:55.200|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 525|Initializing Servlet 'dispatcherServlet'
2020-07-14 17:26:55.222|INFO |RMI TCP Connection(11)-192.168.106.1|RMI TCP Connection(11)-192.168.106.1|org.springframework.web.servlet.DispatcherServlet.initServletBean() 547|Completed initialization in 22 ms
2020-07-14 17:27:47.323|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|com.adam.demo.mq.ChooseCourseTask.receiveChoosecourseTask() 32|receive choose course task,taskId:109
2020-07-14 17:27:54.780|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|com.adam.demo.mq.ChooseCourseTask.receiveChoosecourseTask() 55|send finish choose course taskId:109
2020-07-14 17:31:51.117|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 17:36:51.126|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 17:41:51.151|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 17:46:51.153|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 17:51:51.154|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 17:53:07.705|WARN |AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|com.rabbitmq.client.impl.ForgivingExceptionHandler.log() 115|An unexpected connection driver error occured (Exception message: Connection reset)
2020-07-14 17:53:07.710|ERROR|AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.log() 1566|Channel shutdown: connection error
2020-07-14 17:53:07.710|ERROR|AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.log() 1566|Channel shutdown: connection error
2020-07-14 17:53:08.316|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@5d643896: tags=[[amq.ctag-80mDv8-rgc7ZI4LBjPrUGg]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@192.168.106.129:5672/,1), conn: Proxy@3a5ecb62 Shared Rabbit Connection: SimpleConnection@76ed5e7e [delegate=amqp://guest@192.168.106.129:5672/, localPort= 62828], acknowledgeMode=AUTO local queue size=0
2020-07-14 17:53:08.321|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 18:23:12.554|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection timed out: connect
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:61) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareChannel(CachingConnectionFactory.java:702) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:676) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getChannel(CachingConnectionFactory.java:567) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.access$1600(CachingConnectionFactory.java:102) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ChannelCachingConnectionProxy.createChannel(CachingConnectionFactory.java:1430) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2095) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.8.0_211]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[?:1.8.0_211]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_211]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_211]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1137) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 16 more
2020-07-14 18:23:12.555|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 18:23:12.634|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#146db8a6:2/SimpleConnection@3d3fa669 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 49691]
2020-07-14 18:23:24.440|WARN |HikariPool-1 housekeeper|HikariPool-1 housekeeper|com.zaxxer.hikari.pool.HikariPool.run() 787|HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=30m15s893ms630µs500ns).
2020-07-14 18:24:16.554|WARN |AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|com.rabbitmq.client.impl.ForgivingExceptionHandler.log() 115|An unexpected connection driver error occured (Exception message: Connection reset)
2020-07-14 18:24:16.554|ERROR|AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.log() 1566|Channel shutdown: connection error
2020-07-14 18:24:16.879|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@67caff: tags=[[amq.ctag-HltcwdTJwpzsWJxEZVrtkA]], channel=Cached Rabbit Channel: AMQChannel(amqp://guest@192.168.106.129:5672/,1), conn: Proxy@3a5ecb62 Shared Rabbit Connection: SimpleConnection@3d3fa669 [delegate=amqp://guest@192.168.106.129:5672/, localPort= 49691], acknowledgeMode=AUTO local queue size=0
2020-07-14 18:24:16.886|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 18:38:13.630|WARN |HikariPool-1 housekeeper|HikariPool-1 housekeeper|com.zaxxer.hikari.pool.HikariPool.run() 787|HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m19s191ms160µs300ns).
2020-07-14 18:38:24.521|ERROR|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.redeclareElementsIfNecessary() 1817|Failed to check/redeclare auto-delete queue(s).
org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection timed out: connect
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:61) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:510) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:751) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareChannel(CachingConnectionFactory.java:702) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getCachedChannelProxy(CachingConnectionFactory.java:676) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.getChannel(CachingConnectionFactory.java:567) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.access$1600(CachingConnectionFactory.java:102) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ChannelCachingConnectionProxy.createChannel(CachingConnectionFactory.java:1430) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2095) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2062) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2042) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueInfo(RabbitAdmin.java:407) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.core.RabbitAdmin.getQueueProperties(RabbitAdmin.java:391) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.attemptDeclarations(AbstractMessageListenerContainer.java:1830) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.redeclareElementsIfNecessary(AbstractMessageListenerContainer.java:1811) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.initialize(SimpleMessageListenerContainer.java:1342) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1188) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.8.0_211]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[?:1.8.0_211]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_211]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_211]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1137) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1087) ~[amqp-client-5.9.0.jar:5.9.0]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:526) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:473) ~[spring-rabbit-2.2.6.RELEASE.jar:2.2.6.RELEASE]
	... 16 more
2020-07-14 18:38:24.521|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 18:38:29.600|ERROR|AMQP Connection 192.168.106.129:5672|AMQP Connection 192.168.106.129:5672|com.rabbitmq.client.impl.ForgivingExceptionHandler.log() 119|An unexpected connection driver error occured
java.net.SocketException: Socket Closed
	at java.net.SocketInputStream.socketRead0(Native Method) ~[?:1.8.0_211]
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) ~[?:1.8.0_211]
	at java.net.SocketInputStream.read(SocketInputStream.java:171) ~[?:1.8.0_211]
	at java.net.SocketInputStream.read(SocketInputStream.java:141) ~[?:1.8.0_211]
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246) ~[?:1.8.0_211]
	at java.io.BufferedInputStream.read(BufferedInputStream.java:265) ~[?:1.8.0_211]
	at java.io.DataInputStream.readUnsignedByte(DataInputStream.java:288) ~[?:1.8.0_211]
	at com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184) ~[amqp-client-5.9.0.jar:5.9.0]
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665) ~[amqp-client-5.9.0.jar:5.9.0]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-14 18:38:34.618|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.killOrRestart() 1424|Restarting Consumer@58c10b86: tags=[[]], channel=null, acknowledgeMode=AUTO local queue size=0
2020-07-14 18:38:34.619|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.connect() 524|Attempting to connect to: [192.168.106.129:5672]
2020-07-14 18:38:34.626|INFO |org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4|org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createBareConnection() 497|Created new connection: rabbitConnectionFactory#146db8a6:5/SimpleConnection@498c337f [delegate=amqp://guest@192.168.106.129:5672/, localPort= 50024]
2020-07-14 18:40:26.232|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 18:45:26.233|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 18:50:26.234|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 18:55:26.233|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 19:00:26.236|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 19:05:26.238|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 19:10:26.240|INFO |AsyncResolver-bootstrap-executor-0|AsyncResolver-bootstrap-executor-0|com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints() 43|Resolving eureka endpoints via configuration
2020-07-14 19:13:12.240|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister() 65|Unregistering application EUREKA-CONSUMER-DEMO-MY with eureka with status DOWN
2020-07-14 19:13:12.243|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.notify() 1335|Saw local status change event StatusChangeEvent [timestamp=1594725192241, current=DOWN, previous=UP]
2020-07-14 19:13:12.246|INFO |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 854|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003: registering service...
2020-07-14 19:13:12.333|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 645|Waiting for workers to finish.
2020-07-14 19:13:12.827|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown() 648|Successfully waited for workers to finish.
2020-07-14 19:13:14.271|ERROR|DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute() 91|Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:50101/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:857) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.8.0_211]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[?:1.8.0_211]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_211]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_211]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_211]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.12.jar:4.5.12]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 30 more
2020-07-14 19:13:14.272|WARN |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute() 130|Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-07-14 19:13:14.442|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdown() 1231|Shutdown ignored - container is not active already
2020-07-14 19:13:14.474|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.destroy() 598|Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-14 19:13:14.503|INFO |SpringContextShutdownHook|SpringContextShutdownHook|org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown() 218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-14 19:13:14.506|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 350|HikariPool-1 - Shutdown initiated...
2020-07-14 19:13:14.519|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.zaxxer.hikari.HikariDataSource.close() 352|HikariPool-1 - Shutdown completed.
2020-07-14 19:13:14.562|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 916|Shutting down DiscoveryClient ...
2020-07-14 19:13:16.276|ERROR|DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute() 83|Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:50101/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:857) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.8.0_211]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[?:1.8.0_211]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_211]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_211]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_211]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.12.jar:4.5.12]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 31 more
2020-07-14 19:13:16.276|WARN |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute() 130|Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-07-14 19:13:16.279|WARN |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.DiscoveryClient.register() 859|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:857) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-14 19:13:16.279|WARN |DiscoveryClient-InstanceInfoReplicator-0|DiscoveryClient-InstanceInfoReplicator-0|com.netflix.discovery.InstanceInfoReplicator.run() 125|There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:857) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) ~[eureka-client-1.9.21.jar:1.9.21]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
2020-07-14 19:13:16.287|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 952|Unregistering ...
2020-07-14 19:13:18.476|ERROR|SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute() 83|Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:50101/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:953) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:929) ~[eureka-client-1.9.21.jar:1.9.21]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[?:1.8.0_211]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[?:1.8.0_211]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[?:1.8.0_211]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[?:1.8.0_211]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:1.8.0_211]
	at java.net.Socket.connect(Socket.java:589) ~[?:1.8.0_211]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.12.jar:4.5.12]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.12.jar:4.5.12]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 43 more
2020-07-14 19:13:18.477|WARN |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute() 130|Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-07-14 19:13:18.477|ERROR|SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.unregister() 956|DiscoveryClient_EUREKA-CONSUMER-DEMO-MY/eureka-consumer-demo-my:31003 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:953) ~[eureka-client-1.9.21.jar:1.9.21]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:929) ~[eureka-client-1.9.21.jar:1.9.21]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142) ~[spring-cloud-context-2.2.3.RELEASE.jar:2.2.3.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:168) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
2020-07-14 19:13:18.553|INFO |SpringContextShutdownHook|SpringContextShutdownHook|com.netflix.discovery.DiscoveryClient.shutdown() 941|Completed shut down of DiscoveryClient
